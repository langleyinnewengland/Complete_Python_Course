---
swagger: "2.0"
info:
  description: APIs to interface with Cash Flow Forecasting entities.
  version: API 0.1
  title: "Intelligent Cash Flow Forecasting: REST API"
  termsOfService: Terms of service
  contact:
    name: CFF Flair team
    url: www.bottomline.com
    email: cff-flair@bottomline.com
  license:
    name: License of API
    url: API license URL
host: cffapp-qa1.saas-n.com
tags:
- name: Account Management Services
  description: Account Controller
- name: Company Management Services
  description: Company Controller
- name: ForecastView Management Services
  description: Forecastview Controller
- name: KPI Management Services
  description: Kpi Management Service Controller
- name: KPI Services
  description: Kpi Service Controller
- name: Transaction Categorization Services
  description: Transaction Category Controller
- name: Transaction Management Services
  description: Transaction Controller
- name: V1 - Account Management Services
  description: Account Service Controller
- name: V1 - Company Management Services
  description: Company Service Controller
- name: V1 - Counterparty Management Services
  description: Counter Party Service Controller
- name: V1 - ForecastView Management Services
  description: Forecast View Service Controller
- name: V1 - Transaction Management Services
  description: Transaction Service Controller
- name: account balances
  description: Account Balance Controller
- name: account-package-controller
  description: Account Package Controller
- name: audit-log-controller
  description: Audit Log Controller
- name: authroles
  description: Auth Roles Service Controller
- name: cash-position-controller
  description: Cash Position Controller
- name: currency rates
  description: Currency Rate Controller
- name: data-retrieval-controller
  description: Data Retrieval Controller
- name: forecast adjustments
  description: Adjustment Controller
- name: goals
  description: Goal Controller
- name: grid
  description: Grid Info Controller
- name: gridprofiles
  description: Grid Profile Controller
- name: insights
  description: Insight Controller
- name: machine learning
  description: ML Service Controller
- name: message-controller
  description: Message Controller
- name: plan-service-controller
  description: Plan Service Controller
- name: recurring-transaction-controller
  description: Recurring Transaction Controller
- name: tenantconfigs
  description: Tenant Config Service Controller
- name: tenants
  description: Tenant Service Controller
- name: test-data-controller
  description: Test Data Controller
- name: token-controller
  description: Token Controller
- name: transaction-reconciliation-controller
  description: Transaction Reconciliation Controller
- name: user-controller
  description: User Controller
- name: validation-controller
  description: Validation Controller
- name: what-if-analysis-controller
  description: What If Analysis Controller
paths:
  /cff/app/api/accountbalances/:
    delete:
      tags:
      - account balances
      summary: Delete account balance rows from the database table
      operationId: deleteUsingDELETE
      produces:
      - application/json
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/AccountBalanceRequestListModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AccountBalanceResponseListModel'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/accountbalances/batch:
    post:
      tags:
      - account balances
      summary: Create/Update account balance(s)
      operationId: addAccountBalancesUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/ItemListModelOfAccountBalanceModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AccountBalanceResponseListModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "1000":
          description: Error saving account balance(s)
      security:
      - JWT: []
  /cff/app/api/accountbalances/criteria:
    post:
      tags:
      - account balances
      summary: Returns list of account balances based on the search and filter criteria passed in request body.
      operationId: getAccountBalancesUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/ListRequestModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AccountBalanceResponseListModel'
        "201":
          description: Created
        "400":
          description: Invalid Search and Filter criteria.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: No account balances found.
      security:
      - JWT: []
  /cff/app/api/accountbalances/delete/:
    post:
      tags:
      - account balances
      summary: Delete (clear) account balance data provided from host system
      operationId: clearHostSystemDataUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/AccountBalanceRequestListModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AccountBalanceResponseListModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/accountpackage/connectToQuickbooks:
    get:
      tags:
      - account-package-controller
      summary: connectToQuickbooks
      operationId: connectToQuickbooksUsingGET
      produces:
      - '*/*'
      parameters:
      - name: creationTime
        in: query
        required: false
        type: integer
        format: int64
      - name: id
        in: query
        required: false
        type: string
      - name: lastAccessedTime
        in: query
        required: false
        type: integer
        format: int64
      - name: maxInactiveInterval
        in: query
        required: false
        type: integer
        format: int32
      - name: new
        in: query
        required: false
        type: boolean
      - name: token
        in: query
        description: token
        required: true
        type: string
      - name: valueNames
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/View'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/accountpackage/connectToQuickbooksDirect:
    get:
      tags:
      - account-package-controller
      summary: Intuit Connection Diectly
      operationId: connectToQBODirectUsingGET
      produces:
      - application/json
      parameters:
      - name: creationTime
        in: query
        required: false
        type: integer
        format: int64
      - name: id
        in: query
        required: false
        type: string
      - name: lastAccessedTime
        in: query
        required: false
        type: integer
        format: int64
      - name: maxInactiveInterval
        in: query
        required: false
        type: integer
        format: int32
      - name: new
        in: query
        required: false
        type: boolean
      - name: valueNames
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/QuickBookResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/accountpackage/disconnectQBO/{company}:
    get:
      tags:
      - account-package-controller
      summary: QBO Disconnect
      operationId: revokeTokenUsingGET
      produces:
      - application/json
      parameters:
      - name: company
        in: path
        description: company
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/accountpackage/oAuthKeys:
    get:
      tags:
      - account-package-controller
      summary: QBO Tenant Consumer Key save
      operationId: setOAuthConsumerKeysUsingGET
      produces:
      - application/json
      parameters:
      - name: appId
        in: query
        required: false
        type: string
      - name: clientId
        in: query
        required: false
        type: string
      - name: clientSecret
        in: query
        required: false
        type: string
      - name: description
        in: query
        required: false
        type: string
      - name: redirectURL
        in: query
        required: false
        type: string
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/accountpackage/oauth2redirect:
    get:
      tags:
      - account-package-controller
      summary: callBackFromOAuth
      operationId: callBackFromOAuthUsingGET
      produces:
      - '*/*'
      parameters:
      - name: code
        in: query
        description: code
        required: true
        type: string
      - name: creationTime
        in: query
        required: false
        type: integer
        format: int64
      - name: id
        in: query
        required: false
        type: string
      - name: lastAccessedTime
        in: query
        required: false
        type: integer
        format: int64
      - name: maxInactiveInterval
        in: query
        required: false
        type: integer
        format: int32
      - name: new
        in: query
        required: false
        type: boolean
      - name: realmId
        in: query
        description: realmId
        required: false
        type: string
      - name: state
        in: query
        description: state
        required: true
        type: string
      - name: valueNames
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/View'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/accountpackage/status/{company}:
    get:
      tags:
      - account-package-controller
      summary: QBO Connection Status
      operationId: getStatusUsingGET
      produces:
      - application/json
      parameters:
      - name: company
        in: path
        description: company
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OAuthStatusResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/accountpackage/syncQBO/{company}:
    get:
      tags:
      - account-package-controller
      summary: "Sync accounts,bills, invoices by connecting to quickbooks"
      operationId: syncWithQuickBooksUsingGET
      produces:
      - application/json
      parameters:
      - name: company
        in: path
        description: company
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/accountpackage/testConnectionToIntuit:
    get:
      tags:
      - account-package-controller
      summary: Intuit Connection Test
      operationId: testConnectionToIntuitUsingGET
      produces:
      - '*/*'
      parameters:
      - name: creationTime
        in: query
        required: false
        type: integer
        format: int64
      - name: id
        in: query
        required: false
        type: string
      - name: lastAccessedTime
        in: query
        required: false
        type: integer
        format: int64
      - name: maxInactiveInterval
        in: query
        required: false
        type: integer
        format: int32
      - name: new
        in: query
        required: false
        type: boolean
      - name: valueNames
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/accounts/:
    post:
      tags:
      - Account Management Services
      summary: addAccount
      operationId: addAccountUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: accountRequest
        description: accountRequest
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/AccountModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AccountResponseListModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - Account Management Services
      - accounts
      summary: Soft Delete accounts with given ids.
      operationId: deleteAccountUsingDELETE
      produces:
      - application/json
      parameters:
      - in: body
        name: accounts
        description: accounts
        required: true
        schema:
          $ref: '#/definitions/AccountIdRequestListModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/accounts/batch:
    post:
      tags:
      - Account Management Services
      - accounts
      summary: Add or update account(s).
      operationId: addAccountsUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: accountRequest
        description: accountRequest
        required: true
        schema:
          $ref: '#/definitions/ItemListModelOfAccountModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AccountResponseListModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "1000":
          description: Error saving account(s)
      security:
      - JWT: []
  /cff/app/api/accounts/criteria:
    post:
      tags:
      - Account Management Services
      - accounts
      summary: Returns list of accounts based on the search and filter criteria passed in request body.
      operationId: getAccountsUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/ListRequestModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AccountResponseListModel'
        "201":
          description: Created
        "400":
          description: Invalid Search and Filter criteria.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: No accounts found.
      security:
      - JWT: []
  /cff/app/api/adjustments/:
    post:
      tags:
      - forecast adjustments
      summary: Add or update forecast adjustment(s).
      operationId: addUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/ItemListModelOfAdjustmentModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AdjustmentResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - forecast adjustments
      summary: deletes forecast adjustments with given id(s)
      operationId: deleteUsingDELETE_2
      produces:
      - application/json
      parameters:
      - in: body
        name: ids
        description: ids
        required: true
        schema:
          $ref: '#/definitions/AdjustmentListRequestModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/adjustments/delete/:
    post:
      tags:
      - forecast adjustments
      summary: deletes forecast adjustments with given id(s)
      operationId: deleteByViewIdsUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ids
        description: ids
        required: true
        schema:
          $ref: '#/definitions/AdjustmentListRequestModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/adjustments/viewId/{viewId}:
    get:
      tags:
      - forecast adjustments
      summary: Returns list of adjustments assosciated to view.
      operationId: getAdjustmentsUsingGET
      produces:
      - application/json
      parameters:
      - name: viewId
        in: path
        description: viewId
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AdjustmentResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - forecast adjustments
      summary: deletes forecast adjustments with given view id
      operationId: deleteByViewUsingDELETE
      produces:
      - application/json
      parameters:
      - name: viewId
        in: path
        description: viewId
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/audit/:
    get:
      tags:
      - audit-log-controller
      summary: getAudit
      operationId: getAuditUsingGET
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AuditLogResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    post:
      tags:
      - audit-log-controller
      summary: add
      operationId: addUsingPOST_1
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: audit
        description: audit
        required: true
        schema:
          $ref: '#/definitions/AuditLogModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AuditLogModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/authroles/:
    post:
      tags:
      - authroles
      summary: Add or update authrole(s).
      operationId: addUsingPOST_2
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/ItemListModelOfAuthRolesModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AuthRolesResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - authroles
      summary: deletes authroles with given id(s)
      operationId: deleteTenantsUsingDELETE
      produces:
      - application/json
      parameters:
      - in: body
        name: ids
        description: ids
        required: true
        schema:
          $ref: '#/definitions/AuthRolesListRequestModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/authroles/id/{id}:
    get:
      tags:
      - authroles
      summary: Returns list of authroles.
      operationId: getAuthRoleUsingGET
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AuthRolesModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/cashposition/:
    post:
      tags:
      - cash-position-controller
      summary: "Get cash position for view, filter, and accounts"
      operationId: getCashPositionUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/CashPosRequestModel'
      responses:
        "200":
          description: Successfully calculated and returned Cash Position
          schema:
            $ref: '#/definitions/CashPosResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/cashposition/today/grid:
    get:
      tags:
      - cash-position-controller
      summary: Get transaction grid definition
      operationId: getGridDataUsingGET
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GridInfoModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/cashposition/today/summary/{viewId}:
    post:
      tags:
      - cash-position-controller
      summary: Get todays position for view
      operationId: getTodaysPositionUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: viewId
        in: path
        description: viewId
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TodaysPositionModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/cashposition/today/{viewId}:
    get:
      tags:
      - cash-position-controller
      summary: Get today's cash position details per view by account
      operationId: getCashPosAccountsUsingGET
      produces:
      - application/json
      parameters:
      - name: viewId
        in: path
        description: viewId
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CashPosAccountResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/categorization/scheme:
    get:
      tags:
      - Transaction Categorization Services
      summary: Retrieve a categorization scheme by name
      operationId: retrieveCategorizationSchemeByNameUsingGET
      consumes:
      - '*/*'
      produces:
      - application/json
      parameters:
      - name: name
        in: query
        description: The name of the scheme being retrieved
        required: true
        type: string
        x-example: Assets
      responses:
        "200":
          description: Successfully retrieved categorization scheme by name
          schema:
            $ref: '#/definitions/CategorizationSchemeResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find categorization scheme for given scheme name
      security:
      - JWT: []
    post:
      tags:
      - Transaction Categorization Services
      summary: Create a categorization scheme
      operationId: createCategorizationSchemeUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: categorizationSchemeModel
        description: categorizationSchemeModel
        required: true
        schema:
          $ref: '#/definitions/CategorizationSchemeModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CategorizationSchemeResponseModel'
        "201":
          description: Successfully created categorization scheme
          schema:
            $ref: '#/definitions/CategorizationSchemeResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/categorization/scheme/{schemeId}:
    get:
      tags:
      - Transaction Categorization Services
      summary: Retrieve a categorization scheme
      operationId: retrieveCategorizationSchemeByIdUsingGET
      produces:
      - application/json
      parameters:
      - name: schemeId
        in: path
        description: The ID of the scheme being updated
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: Successfully retrieved categorization scheme
          schema:
            $ref: '#/definitions/CategorizationSchemeResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find categorization scheme for given scheme ID
      security:
      - JWT: []
    put:
      tags:
      - Transaction Categorization Services
      summary: Update a categorization scheme
      operationId: updateCategorizationSchemeUsingPUT
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: categorizationSchemeModel
        description: categorizationSchemeModel
        required: true
        schema:
          $ref: '#/definitions/CategorizationSchemeModel'
      - name: schemeId
        in: path
        description: The ID of the scheme being updated
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: Successfully updated categorization scheme
          schema:
            $ref: '#/definitions/CategorizationSchemeResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find categorization scheme to update
      security:
      - JWT: []
    delete:
      tags:
      - Transaction Categorization Services
      summary: Delete a categorization scheme in entirety
      operationId: deleteCategorizationSchemeUsingDELETE
      produces:
      - application/json
      parameters:
      - name: schemeId
        in: path
        description: The ID of the scheme being deleted
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: Successfully deleted categorization scheme
          schema:
            type: boolean
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find categorization scheme to delete
      security:
      - JWT: []
  /cff/app/api/categorization/scheme/{schemeId}/categorize:
    post:
      tags:
      - Transaction Categorization Services
      summary: Create a categorization
      operationId: createCategorizationUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: categorizationModel
        description: categorizationModel
        required: true
        schema:
          $ref: '#/definitions/CategorizationModelReq'
      - name: schemeId
        in: path
        description: The ID of the scheme to which the categorization is being added
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CategorizationModelRes'
        "201":
          description: Successfully created categorization
          schema:
            $ref: '#/definitions/CategorizationModelRes'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find categorization scheme
      security:
      - JWT: []
  /cff/app/api/categorization/scheme/{schemeId}/categorize/batch:
    post:
      tags:
      - Transaction Categorization Services
      summary: Create a categorization batch
      operationId: createCategorizationBatchUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: categorizationModelList
        description: categorizationModelList
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/CategorizationModelReq'
      - name: schemeId
        in: path
        description: The ID of the scheme to which the categorization batch is being added
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/CategorizationModelRes'
        "201":
          description: Successfully created categorization batch
          schema:
            type: array
            items:
              $ref: '#/definitions/CategorizationModelRes'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find categorization scheme
      security:
      - JWT: []
  /cff/app/api/categorization/scheme/{schemeId}/categorize/{categorizationId}:
    get:
      tags:
      - Transaction Categorization Services
      summary: Retrieve a categorization
      operationId: retrieveCategorizationUsingGET
      produces:
      - application/json
      parameters:
      - name: categorizationId
        in: path
        description: The ID of the categorization to retrieve
        required: true
        type: integer
        format: int64
        x-example: 999
      - name: schemeId
        in: path
        description: The ID of the scheme to which the categorization being retrieved belongs
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: Successfully retrieved categorization
          schema:
            $ref: '#/definitions/CategorizationModelRes'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to either find categorization scheme or categorization
      security:
      - JWT: []
    put:
      tags:
      - Transaction Categorization Services
      summary: Update a categorization
      operationId: updateCategorizationUsingPUT
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: categorizationId
        in: path
        description: The ID of the categorization to update
        required: true
        type: integer
        format: int64
        x-example: 999
      - in: body
        name: categorizationModel
        description: categorizationModel
        required: true
        schema:
          $ref: '#/definitions/CategorizationModelReq'
      - name: schemeId
        in: path
        description: The ID of the scheme to which the categorization being updated belongs
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: Successfully updated categorization
          schema:
            $ref: '#/definitions/CategorizationModelRes'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to either find categorization scheme or categorization
      security:
      - JWT: []
    delete:
      tags:
      - Transaction Categorization Services
      summary: Delete a categorization
      operationId: deleteCategorizationUsingDELETE
      produces:
      - application/json
      parameters:
      - name: categorizationId
        in: path
        description: The ID of the categorization to delete
        required: true
        type: integer
        format: int64
        x-example: 999
      - name: schemeId
        in: path
        description: The ID of the scheme to which the categorization being deleted belongs
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: Successfully deleted categorization
          schema:
            type: boolean
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to either find categorization scheme or categorization
      security:
      - JWT: []
  /cff/app/api/categorization/scheme/{schemeId}/categorizor:
    get:
      tags:
      - Transaction Categorization Services
      summary: Retrieve a categorizor by name
      operationId: retrieveCategorizationSpecificationByNameUsingGET
      consumes:
      - '*/*'
      produces:
      - application/json
      parameters:
      - name: name
        in: query
        description: The name of the specification being retrieved
        required: true
        type: string
        x-example: OfficeSupplies
      responses:
        "200":
          description: Successfully retrieved categorizor by name
          schema:
            $ref: '#/definitions/RulesBasedTransactionCategorizerResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find categorizor for given name
      security:
      - JWT: []
    post:
      tags:
      - Transaction Categorization Services
      summary: Create a Categorizer
      operationId: createCategorizerUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: categorizerModel
        description: categorizerModel
        required: true
        schema:
          $ref: '#/definitions/RulesBasedTransactionCategorizerModel'
      - name: schemeId
        in: path
        description: The ID of the scheme to which the Categorizer is being added
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RulesBasedTransactionCategorizerResponseModel'
        "201":
          description: Successfully created Categorizer
          schema:
            $ref: '#/definitions/RulesBasedTransactionCategorizerResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find categorization scheme
      security:
      - JWT: []
  /cff/app/api/categorization/scheme/{schemeId}/categorizor/{categorizerId}:
    get:
      tags:
      - Transaction Categorization Services
      summary: Retrieve a Categorizer
      operationId: retrieveCategorizerUsingGET
      produces:
      - application/json
      parameters:
      - name: categorizerId
        in: path
        description: The ID of the Categorizer to retrieve
        required: true
        type: integer
        format: int64
        x-example: 999
      - name: schemeId
        in: path
        description: The ID of the scheme to which the Categorizer being retrieved belongs
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: Successfully retrieved Categorizer
          schema:
            $ref: '#/definitions/RulesBasedTransactionCategorizerResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find categorization scheme or Categorizer
      security:
      - JWT: []
    put:
      tags:
      - Transaction Categorization Services
      summary: Update a Categorizer
      operationId: updateCategorizerUsingPUT
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: categorizerId
        in: path
        description: The ID of the Categorizer to update
        required: true
        type: integer
        format: int64
        x-example: 999
      - in: body
        name: categorizerModel
        description: categorizerModel
        required: true
        schema:
          $ref: '#/definitions/RulesBasedTransactionCategorizerModel'
      - name: schemeId
        in: path
        description: The ID of the scheme to which the Categorizer being updated belongs
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: Successfully retrieved Categorizer
          schema:
            $ref: '#/definitions/RulesBasedTransactionCategorizerResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find categorization scheme or Categorizer
      security:
      - JWT: []
    delete:
      tags:
      - Transaction Categorization Services
      summary: Delete a Categorizer
      operationId: deleteCategorizerUsingDELETE
      produces:
      - application/json
      parameters:
      - name: categorizerId
        in: path
        description: The ID of the Categorizer to update
        required: true
        type: integer
        format: int64
        x-example: 999
      - name: schemeId
        in: path
        description: The ID of the scheme to which the Categorizer being updated belongs
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: Successfully deleted Categorizer
          schema:
            type: object
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find categorization scheme or Categorizer
      security:
      - JWT: []
  /cff/app/api/categorization/scheme/{schemeId}/category:
    get:
      tags:
      - Transaction Categorization Services
      summary: Retrieve a category by name
      operationId: retrieveCategoryUsingGET
      produces:
      - application/json
      parameters:
      - name: categoryName
        in: query
        description: The name of the category to retrieve
        required: true
        type: string
        x-example: Assets
      - name: schemeId
        in: path
        description: The ID of the scheme to which the category being retrieved belongs
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: Successfully retrieved category
          schema:
            $ref: '#/definitions/CategorizationSchemeModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find categorization scheme or category
      security:
      - JWT: []
    post:
      tags:
      - Transaction Categorization Services
      summary: Add a category to a scheme
      operationId: createCategoryUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: categoryModel
        description: categoryModel
        required: true
        schema:
          $ref: '#/definitions/CategoryModel'
      - name: schemeId
        in: path
        description: The ID of the scheme to which the category being added belongs
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CategoryModel'
        "201":
          description: Successfully created category
          schema:
            $ref: '#/definitions/CategoryModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find categorization scheme to add category to
      security:
      - JWT: []
    put:
      tags:
      - Transaction Categorization Services
      summary: Update a set of categories for a company
      operationId: updateCategoriesUsingPUT
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: categoryModels
        description: categoryModels
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/CategoryModel'
      - name: schemeId
        in: path
        description: The ID of the scheme to which the categories being updated belong
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: Successfully updated categories
          schema:
            $ref: '#/definitions/CategoryModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find categorization scheme or category to update
      security:
      - JWT: []
  /cff/app/api/categorization/scheme/{schemeId}/category/{categoryId}:
    get:
      tags:
      - Transaction Categorization Services
      summary: Retrieve a category
      operationId: retrieveCategoryByIdUsingGET
      produces:
      - application/json
      parameters:
      - name: schemeId
        in: path
        description: The ID of the scheme to which the category being retrieved belongs
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CategoryModel'
        "201":
          description: Successfully retrieved category
          schema:
            $ref: '#/definitions/CategorizationSchemeModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find categorization scheme or category
      security:
      - JWT: []
    put:
      tags:
      - Transaction Categorization Services
      summary: Update a category
      operationId: updateCategoryUsingPUT
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: categoryId
        in: path
        description: The ID of the category to update
        required: true
        type: integer
        format: int64
        x-example: 999
      - in: body
        name: categoryModel
        description: categoryModel
        required: true
        schema:
          $ref: '#/definitions/CategoryModel'
      - name: schemeId
        in: path
        description: The ID of the scheme to which the category being updated belongs
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: Successfully updated category
          schema:
            $ref: '#/definitions/CategoryModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find categorization scheme or category to update
      security:
      - JWT: []
    delete:
      tags:
      - Transaction Categorization Services
      summary: Delete a category and all its subcategories
      operationId: deleteCategoryUsingDELETE
      produces:
      - application/json
      parameters:
      - name: categoryId
        in: path
        description: The ID of the category to retrieve
        required: true
        type: integer
        format: int64
        x-example: 999
      - name: schemeId
        in: path
        description: The ID of the scheme to which the category being retrieved belongs
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: Successfully deleted category and all its children
          schema:
            type: object
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: "Unable to either find categorization scheme, or category to delete"
      security:
      - JWT: []
  /cff/app/api/categorization/scheme/{schemeId}/category/{categoryId}/checkUsage:
    get:
      tags:
      - Transaction Categorization Services
      summary: "check the usage of category given by id, returns the count of transactions, plan items and adjustments using this category"
      operationId: checkCategoryUsageUsingGET
      produces:
      - application/json
      parameters:
      - name: categoryId
        in: path
        description: The ID of the category to reassign from
        required: true
        type: integer
        format: int64
        x-example: 999
      - name: schemeId
        in: path
        description: The ID of the scheme to which the category being retrieved belongs
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: Successfully reasigned category
          schema:
            $ref: '#/definitions/CategoryUsageModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: "Unable to either find categorization scheme, category to reassign from or category to reassign to"
      security:
      - JWT: []
  /cff/app/api/categorization/scheme/{schemeId}/category/{categoryId}/reassign:
    post:
      tags:
      - Transaction Categorization Services
      summary: "Reassign a category to another, ensuring that all dependent entities are reassigned. The original category is deleted on success."
      operationId: reassignCategoryUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: categoryId
        in: path
        description: The ID of the category to reassign from
        required: true
        type: integer
        format: int64
        x-example: 999
      - name: schemeId
        in: path
        description: The ID of the scheme to which the category being retrieved belongs
        required: true
        type: integer
        format: int64
        x-example: 888
      - name: targetCategoryId
        in: query
        description: The ID of the category to reassign to
        required: true
        type: integer
        format: int64
        x-example: 999
      responses:
        "200":
          description: Successfully reasigned category
          schema:
            type: object
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: "Unable to either find categorization scheme, category to reassign from or category to reassign to"
      security:
      - JWT: []
  /cff/app/api/categorization/scheme/{schemeId}/specification:
    get:
      tags:
      - Transaction Categorization Services
      summary: Retrieve all categorization specifications for a company
      operationId: retrieveCategorizationSpecificationsUsingGET
      consumes:
      - '*/*'
      produces:
      - application/json
      parameters:
      - name: schemeId
        in: path
        description: The ID of the scheme to which the categorization specifications being retrieved belong
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: Categorization specifications successfully retrieved
          schema:
            type: array
            items:
              $ref: '#/definitions/CategorizationSpecificationResponseModel'
        "400":
          description: Unable to find categorization scheme
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    post:
      tags:
      - Transaction Categorization Services
      summary: Create a categorization specification
      operationId: createCategorizationSpecificationUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: categorizationSpecificationModel
        description: categorizationSpecificationModel
        required: true
        schema:
          $ref: '#/definitions/CategorizationSpecificationModel'
      - name: schemeId
        in: path
        description: The ID of the scheme to which the categorization specification is being added
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CategorizationSpecificationResponseModel'
        "201":
          description: Successfully created categorization specification
          schema:
            $ref: '#/definitions/CategorizationSpecificationResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find categorization scheme
      security:
      - JWT: []
    put:
      tags:
      - Transaction Categorization Services
      summary: Update a set of categorization specifications
      operationId: updateCategorizatonSpecificationsUsingPUT
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: categorizationSpecificationModels
        description: categorizationSpecificationModels
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/CategorizationSpecificationModel'
      - name: schemeId
        in: path
        description: The ID of the scheme to which the categories being updated belong
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: Successfully updated categories
          schema:
            $ref: '#/definitions/CategorizationSpecificationResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find categorization scheme or category to update
      security:
      - JWT: []
  /cff/app/api/categorization/scheme/{schemeId}/specification/bulk:
    post:
      tags:
      - Transaction Categorization Services
      summary: Delete categorization specifications in bulk
      operationId: deleteCategorizationSpecificationsBulkUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: categorizationSpecificationModels
        description: categorizationSpecificationModels
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/CategorizationSpecificationModel'
      - name: schemeId
        in: path
        description: The ID of the scheme to which the categorization specification being deleted belongs
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: Successfully deleted categorization specifications
          schema:
            type: object
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find categorization scheme or categorization specification
      security:
      - JWT: []
  /cff/app/api/categorization/scheme/{schemeId}/specification/{categorizationSpecificationId}:
    get:
      tags:
      - Transaction Categorization Services
      summary: Retrieve a categorization specification
      operationId: retrieveCategorizationSpecificationUsingGET
      produces:
      - application/json
      parameters:
      - name: categorizationSpecificationId
        in: path
        description: The ID of the categorization specification to retrieve
        required: true
        type: integer
        format: int64
        x-example: 999
      - name: schemeId
        in: path
        description: The ID of the scheme to which the categorization specification being retrieved belongs
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: Successfully retrieved categorization specification
          schema:
            $ref: '#/definitions/CategorizationSpecificationResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find categorization scheme or categorization specification
      security:
      - JWT: []
    put:
      tags:
      - Transaction Categorization Services
      summary: Update a categorization specification
      operationId: updateCategorizationSpecificationUsingPUT
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: categorizationSpecificationId
        in: path
        description: The ID of the categorization specification to update
        required: true
        type: integer
        format: int64
        x-example: 999
      - in: body
        name: categorizationSpecificationModel
        description: categorizationSpecificationModel
        required: true
        schema:
          $ref: '#/definitions/CategorizationSpecificationModel'
      - name: schemeId
        in: path
        description: The ID of the scheme to which the categorization specification being updated belongs
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: Successfully retrieved categorization specification
          schema:
            $ref: '#/definitions/CategorizationSpecificationResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find categorization scheme or categorization specification
      security:
      - JWT: []
    delete:
      tags:
      - Transaction Categorization Services
      summary: Delete a categorization specification
      operationId: deleteCategorizationSpecificationUsingDELETE
      produces:
      - application/json
      parameters:
      - name: categorizationSpecificationId
        in: path
        description: The ID of the categorization specification to update
        required: true
        type: integer
        format: int64
        x-example: 999
      - name: schemeId
        in: path
        description: The ID of the scheme to which the categorization specification being updated belongs
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: Successfully deleted categorization specification
          schema:
            type: object
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find categorization scheme or categorization specification
      security:
      - JWT: []
  /cff/app/api/companies/:
    get:
      tags:
      - Company Management Services
      - companies
      summary: Returns all companies
      operationId: getCompaniesUsingGET
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CompanyResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    post:
      tags:
      - Company Management Services
      - companies
      summary: Add or update Companies.
      operationId: addUsingPOST_3
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/ItemListModelOfCompanyModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CompanyResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    put:
      tags:
      - Company Management Services
      - companies
      summary: Update Companies.
      operationId: updateUsingPUT
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/ItemListModelOfCompanyModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CompanyResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - Company Management Services
      - companies
      summary: Deletes companies with given id(s)
      operationId: deleteCompaniesUsingDELETE
      produces:
      - application/json
      parameters:
      - in: body
        name: ids
        description: ids
        required: true
        schema:
          $ref: '#/definitions/CompanyListRequestModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/companies/company/{company}:
    get:
      tags:
      - Company Management Services
      - companies
      summary: Returns a company.
      operationId: getCompanyUsingGET
      produces:
      - application/json
      parameters:
      - name: company
        in: path
        description: company
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CompanyModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - Company Management Services
      - companies
      summary: Deletes a company with a given name
      operationId: deleteCompanyUsingDELETE
      produces:
      - application/json
      parameters:
      - name: company
        in: path
        description: company
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/companies/intakes/:
    post:
      tags:
      - Company Management Services
      summary: Save Intake data
      operationId: saveIntakeResponsesUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: intakeRequest
        description: intakeRequest
        required: true
        schema:
          $ref: '#/definitions/IntakeRequestModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/companies/intakes/form/{company}:
    get:
      tags:
      - Company Management Services
      summary: Get the Intake Form definition.
      operationId: getIntakeFormUsingGET
      produces:
      - '*/*'
      parameters:
      - name: company
        in: path
        description: company
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/IntakeFormResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/currencyrates/:
    post:
      tags:
      - currency rates
      summary: Add or update forecast adjustment(s).
      operationId: addUsingPOST_4
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/ItemListModelOfCurrencyRateModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CurrencyRateResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - currency rates
      summary: deletes currency rates with given id(s)
      operationId: deleteCurrencyRatesUsingDELETE
      produces:
      - application/json
      parameters:
      - in: body
        name: ids
        description: ids
        required: true
        schema:
          $ref: '#/definitions/CurrencyRateListRequestModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/currencyrates/fromCurrency/{fromCurrency}/toCurrency/{toCurrency}:
    get:
      tags:
      - currency rates
      summary: Returns list of rates assosciated to currency pair.
      operationId: getCurrencyRatesUsingGET
      produces:
      - application/json
      parameters:
      - name: fromCurrency
        in: path
        description: fromCurrency
        required: true
        type: string
      - name: toCurrency
        in: path
        description: toCurrency
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CurrencyRateResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/forecastviews:
    post:
      tags:
      - ForecastView Management Services
      summary: Create new forecast view(s)
      operationId: saveAllUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: models
        description: models
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/ForecastViewModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ForecastViewResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    put:
      tags:
      - ForecastView Management Services
      summary: Update forecast views with given transaction ids
      operationId: updateForecastViewUsingPUT
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: forecastViews
        description: forecastViews
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/ForecastViewModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ForecastViewResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/forecastviews/:
    delete:
      tags:
      - ForecastView Management Services
      summary: deletes forecast views with given id(s)
      operationId: deleteForecastViewUsingDELETE
      produces:
      - application/json
      parameters:
      - in: body
        name: ids
        description: ids
        required: true
        schema:
          $ref: '#/definitions/ForecastviewRequestListModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/forecastviews/company/{company}:
    get:
      tags:
      - ForecastView Management Services
      summary: Get all forecast views
      operationId: getForecastViewsUsingGET
      produces:
      - '*/*'
      parameters:
      - name: company
        in: path
        description: company
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ForecastViewResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/forecastviews/delete/:
    post:
      tags:
      - ForecastView Management Services
      summary: deletes forecast views with given id(s)
      operationId: deleteForecastViewWithPostUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ids
        description: ids
        required: true
        schema:
          $ref: '#/definitions/ForecastviewRequestListModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/forecastviews/enums:
    get:
      tags:
      - ForecastView Management Services
      summary: get all the forecast view enums list
      operationId: getEnumsUsingGET
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ForecastviewEnumsResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/forecastviews/id/{id}:
    get:
      tags:
      - ForecastView Management Services
      summary: Get forecast view of a given id
      operationId: getForecastViewUsingGET
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ForecastViewResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/goals/:
    post:
      tags:
      - goals
      summary: Add or update goal(s).
      operationId: addUsingPOST_5
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/ItemListModelOfGoalModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GoalResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - goals
      summary: deletes goals with given id(s)
      operationId: deleteGoalUsingDELETE
      produces:
      - application/json
      parameters:
      - in: body
        name: ids
        description: ids
        required: true
        schema:
          $ref: '#/definitions/GoalListRequestModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/goals/delete/:
    post:
      tags:
      - goals
      summary: deletes goals with given id(s)
      operationId: deleteGoalWithViewIdUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ids
        description: ids
        required: true
        schema:
          $ref: '#/definitions/GoalListRequestModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/goals/viewId/{viewId}:
    get:
      tags:
      - goals
      summary: Returns list of goals assosciated to view.
      operationId: getGoalsUsingGET
      produces:
      - application/json
      parameters:
      - name: viewId
        in: path
        description: viewId
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GoalResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/grid/:
    get:
      tags:
      - grid
      summary: Retrieve grid by name
      operationId: retrieveGridsUsingGET
      consumes:
      - '*/*'
      produces:
      - application/json
      parameters:
      - name: name
        in: query
        description: name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GridInfoResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    post:
      tags:
      - grid
      summary: Create a grid
      operationId: createGridUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: gridModel
        description: gridModel
        required: true
        schema:
          $ref: '#/definitions/GridInfoModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GridInfoResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/grid/{gridId}:
    get:
      tags:
      - grid
      summary: Retrieve a grid
      operationId: retrieveGridUsingGET
      produces:
      - application/json
      parameters:
      - name: gridId
        in: path
        description: gridId
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GridInfoResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    put:
      tags:
      - grid
      summary: Update a grid
      operationId: updateGridUsingPUT
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: gridId
        in: path
        description: gridId
        required: true
        type: integer
        format: int64
      - in: body
        name: gridModel
        description: gridModel
        required: true
        schema:
          $ref: '#/definitions/GridInfoModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GridInfoResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - grid
      summary: Delete a grid
      operationId: deleteGridUsingDELETE
      produces:
      - application/json
      parameters:
      - name: gridId
        in: path
        description: gridId
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/gridprofiles/:
    post:
      tags:
      - gridprofiles
      summary: Get grid profiles
      operationId: getGridProfilesUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: gridProfileModel
        description: gridProfileModel
        required: true
        schema:
          $ref: '#/definitions/GridProfileDefaultRequestModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GridProfileResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    put:
      tags:
      - gridprofiles
      summary: Add or update grid profile with given values
      operationId: saveGridProfileUsingPUT
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: gridProfileRequest
        description: gridProfileRequest
        required: true
        schema:
          $ref: '#/definitions/GridProfileModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GridProfileResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/gridprofiles/default:
    post:
      tags:
      - gridprofiles
      summary: Set default profile for a grid
      operationId: setDefaultGridProfileUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: gridProfileRequest
        description: gridProfileRequest
        required: true
        schema:
          $ref: '#/definitions/GridProfileDefaultRequestModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/gridprofiles/delete/id/{id}:
    post:
      tags:
      - gridprofiles
      summary: Delete grid profile with given id
      operationId: deleteGridProfileWithPostUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/gridprofiles/id/{id}:
    delete:
      tags:
      - gridprofiles
      summary: Delete grid profile with given id
      operationId: deleteGridProfileUsingDELETE
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/inquiries/:
    post:
      tags:
      - data-retrieval-controller
      summary: "Get data for requested entity type, filter and sort values"
      operationId: getDataUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/ListRequestModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/insights/:
    post:
      tags:
      - insights
      summary: Add or update insight(s).
      operationId: addUsingPOST_6
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: json
        description: json
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/InsightResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/insights/company/{company}:
    get:
      tags:
      - insights
      summary: Returns list of insights associated to company.
      operationId: getAllInsightsUsingGET
      produces:
      - application/json
      parameters:
      - name: company
        in: path
        description: company
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/InsightResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/insights/id/{id}:
    get:
      tags:
      - insights
      summary: Return an insight for specific id
      operationId: getInsightUsingGET
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/InsightResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/insights/initiate/{company}:
    get:
      tags:
      - insights
      summary: Initiate Insight check for company.
      operationId: initiateInsightsUsingGET
      produces:
      - application/json
      parameters:
      - name: company
        in: path
        description: company
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/machinelearning/company/{company}:
    get:
      tags:
      - machine learning
      summary: Get ML company data.
      operationId: getMLMetaDataUsingGET
      produces:
      - application/json
      parameters:
      - name: company
        in: path
        description: company
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MlConfigResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    post:
      tags:
      - machine learning
      summary: Add or update ML company configuration data.
      operationId: addMLMetaDataUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: company
        in: path
        description: company
        required: true
        type: string
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/MlConfigModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/machinelearning/control/:
    get:
      tags:
      - machine learning
      summary: Get ML control data.
      operationId: getMLControlUsingGET
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MlControlResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    post:
      tags:
      - machine learning
      summary: Add or update ML control data.
      operationId: addMLControlUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/MlControlModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/machinelearning/testLogin/{company}:
    get:
      tags:
      - machine learning
      summary: '*** Only for testing. Test ML Login.  Returns the X-CSRF token to be used in subsequent calls.'
      operationId: getMLLoginUsingGET
      produces:
      - application/json
      parameters:
      - name: company
        in: path
        description: company
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/machinelearning/testScoring/{viewId}:
    get:
      tags:
      - machine learning
      summary: '*** Only for testing. Test ML Login and Scoring.  Returns the predicted values.'
      operationId: getMLScoreSetUsingGET
      produces:
      - application/json
      parameters:
      - name: viewId
        in: path
        description: viewId
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ScoringResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/messages/{localeStr}:
    get:
      tags:
      - message-controller
      summary: Get localized text for use in UI for the given locale
      operationId: getLocaleUsingGET
      produces:
      - application/json
      parameters:
      - name: localeStr
        in: path
        description: localeStr
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MessageModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/planning/:
    get:
      tags:
      - plan-service-controller
      summary: Returns a list of plans for a company
      operationId: getPlanModelsUsingGET
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PlanModelsResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    post:
      tags:
      - plan-service-controller
      summary: Create first version of plan
      operationId: createUsingPOST_6
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inputModel
        description: inputModel
        required: true
        schema:
          $ref: '#/definitions/PlanResponseModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PlanModelsResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/planning/structure:
    post:
      tags:
      - plan-service-controller
      summary: Structures a plan configuration for a company
      operationId: structurePlanUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: planConfigRequestModel
        description: planConfigRequestModel
        required: true
        schema:
          $ref: '#/definitions/PlanConfigRequestModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PlanModelsResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/planning/structure/{planId}:
    put:
      tags:
      - plan-service-controller
      summary: Restructures a plan configuration for a company
      operationId: restructurePlanUsingPUT
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: planConfigRequestModel
        description: planConfigRequestModel
        required: true
        schema:
          $ref: '#/definitions/PlanConfigRequestModel'
      - name: planId
        in: path
        description: The ID of the plan being restructured
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PlanModelsResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/planning/{planId}:
    get:
      tags:
      - plan-service-controller
      summary: Retrieve a plan
      operationId: retrieveUsingGET_6
      produces:
      - application/json
      parameters:
      - name: planId
        in: path
        description: The ID of the plan being retrieved
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: Successfully retrieved plan
          schema:
            $ref: '#/definitions/PlanModelsResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find plan for given ID
      security:
      - JWT: []
    put:
      tags:
      - plan-service-controller
      summary: Update a plan
      operationId: updateUsingPUT_1
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inputModel
        description: inputModel
        required: true
        schema:
          $ref: '#/definitions/PlanResponseModel'
      - name: planId
        in: path
        description: The ID of the Plan being updated
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: Successfully updated Plan
          schema:
            $ref: '#/definitions/PlanModelsResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find Plan to update
      security:
      - JWT: []
    delete:
      tags:
      - plan-service-controller
      summary: Delete a plan
      operationId: deleteUsingDELETE_8
      produces:
      - application/json
      parameters:
      - name: planId
        in: path
        description: The ID of the plan being retrieved
        required: true
        type: integer
        format: int64
        x-example: 888
      responses:
        "200":
          description: Successfully deleted plan
          schema:
            $ref: "#/definitions/Error-ModelName{namespace='java.lang', name='Void'}"
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Unable to find plan for given ID
      security:
      - JWT: []
  /cff/app/api/reconciliation/:
    post:
      tags:
      - transaction-reconciliation-controller
      summary: Returns a list of matches for a transaction
      operationId: getTransactionReconciliationModelsUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: transactionReconciliationRequestModel
        description: transactionReconciliationRequestModel
        required: true
        schema:
          $ref: '#/definitions/TransactionReconciliationRequestModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TransactionReconciliationResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/reconciliation/match:
    post:
      tags:
      - transaction-reconciliation-controller
      summary: Matches a list of transactions with the source transaction
      operationId: matchUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: transactionReconciliationRequestModel
        description: transactionReconciliationRequestModel
        required: true
        schema:
          $ref: '#/definitions/TransactionReconciliationRequestModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TransactionReconciliationResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/reconciliation/removeMatch:
    post:
      tags:
      - transaction-reconciliation-controller
      summary: Removed a list of matched transactions with the source transaction
      operationId: removeMatchUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: transactionReconciliationRequestModel
        description: transactionReconciliationRequestModel
        required: true
        schema:
          $ref: '#/definitions/TransactionReconciliationRequestModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TransactionReconciliationResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/recurring:
    post:
      tags:
      - recurring-transaction-controller
      summary: Create new recurring transaction(s)
      operationId: addTransactionUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: transactionRequest
        description: transactionRequest
        required: true
        schema:
          $ref: '#/definitions/ItemListModelOfTransactionModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TransactionResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    put:
      tags:
      - recurring-transaction-controller
      summary: Update recurring transaction and series of transactions associated with it
      operationId: saveRecurringTransactionUsingPUT
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: transactionModels
        description: transactionModels
        required: true
        schema:
          $ref: '#/definitions/ItemListModelOfTransactionModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TransactionResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - recurring-transaction-controller
      summary: Soft Delete (User Defined) or Hard Delete (BANK defined) recurring transaction series and all related transactions from today and in the future.
      operationId: deleteRecurringTransactionUsingDELETE
      produces:
      - application/json
      parameters:
      - in: body
        name: transactions
        description: transactions
        required: true
        schema:
          $ref: '#/definitions/TransactionRequestDeleteListModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/recurring/delete:
    post:
      tags:
      - recurring-transaction-controller
      summary: Soft Delete (User Defined) or Hard Delete (BANK defined) recurring transaction series and all related transactions from today and in the future.
      operationId: deleteRecurringTransactionWithPostUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: transactions
        description: transactions
        required: true
        schema:
          $ref: '#/definitions/TransactionRequestListModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/recurring/ical:
    post:
      tags:
      - recurring-transaction-controller
      summary: Create new recurring transaction(s) using RFC 5455 ICalendar standards
      operationId: addTransactionIcalUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: transactionRequest
        description: transactionRequest
        required: true
        schema:
          $ref: '#/definitions/ItemListModelOfRecurringTransactionModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TransactionResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    put:
      tags:
      - recurring-transaction-controller
      summary: Update recurring transaction and series of transactions associated with it using RFC 5455 ICalendar standards
      operationId: saveRecurringTransactionIcalUsingPUT
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: transactionModels
        description: transactionModels
        required: true
        schema:
          $ref: '#/definitions/ItemListModelOfRecurringTransactionModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TransactionResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/tenantconfigs/:
    post:
      tags:
      - tenantconfigs
      summary: Add or update tenant(s).
      operationId: addUsingPOST_7
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/ItemListModelOfTenantConfigModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TenantConfigResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - tenantconfigs
      summary: deletes tenantconfigs with given id(s)
      operationId: deleteTenantConfigsUsingDELETE
      produces:
      - application/json
      parameters:
      - in: body
        name: ids
        description: ids
        required: true
        schema:
          $ref: '#/definitions/TenantConfigListRequestModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/tenantconfigs/id/{id}:
    get:
      tags:
      - tenantconfigs
      summary: Returns list of tenantconfigs.
      operationId: getTenantConfigsUsingGET
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TenantConfigModelRes'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/tenantconfigs/tenantid/{tenantid}:
    get:
      tags:
      - tenantconfigs
      summary: Returns tenantconfig.
      operationId: getTenantConfigsUsingGET_1
      produces:
      - application/json
      parameters:
      - name: tenantid
        in: path
        description: tenantid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TenantConfigModelRes'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/tenants/:
    post:
      tags:
      - tenants
      summary: Add or update tenant(s).
      operationId: addUsingPOST_8
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/ItemListModelOfTenantModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TenantResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - tenants
      summary: deletes tenants with given id(s)
      operationId: deleteTenantsUsingDELETE_1
      produces:
      - application/json
      parameters:
      - in: body
        name: ids
        description: ids
        required: true
        schema:
          $ref: '#/definitions/TenantListRequestModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/tenants/id/{id}:
    get:
      tags:
      - tenants
      summary: Returns list of tenants.
      operationId: getTenantsUsingGET
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TenantModelRes'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/tenants/tenantid/{tenantid}:
    get:
      tags:
      - tenants
      summary: Returns list of tenants.
      operationId: getTenantsUsingGET_1
      produces:
      - application/json
      parameters:
      - name: tenantid
        in: path
        description: tenantid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TenantModelRes'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/transactions/:
    post:
      tags:
      - Transaction Management Services
      summary: Add transaction(s) for accounts based on account numbers supplied per transaction record
      operationId: addTransactionUsingPOST_1
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: transactionRequest
        description: transactionRequest
        required: true
        schema:
          $ref: '#/definitions/ItemListModelOfTransactionModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TransactionResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - Transaction Management Services
      summary: Soft Delete (User Defined) or Hard Delete (BANK defined) transactions with given ids
      operationId: deleteTransactionUsingDELETE
      produces:
      - application/json
      parameters:
      - in: body
        name: transactions
        description: transactions
        required: true
        schema:
          $ref: '#/definitions/TransactionRequestDeleteListModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TransactionResponseModel'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
    patch:
      tags:
      - Transaction Management Services
      summary: Partial batch update of one or more transactions.  Current implementation supports updating only Status attribute.
      operationId: partialUpdateTransactionUsingPATCH
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: partialUpdateRequest
        description: partialUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/PartialUpdateListModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TransactionResponseModel'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/transactions/criteria:
    post:
      tags:
      - Transaction Management Services
      - transactions
      summary: Returns list of transactions based on the search and filter criteria passed in request body.
      operationId: getTransactionsUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/ListRequestModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TransactionListResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/transactions/delete:
    post:
      tags:
      - Transaction Management Services
      summary: Soft Delete (User Defined) or Hard Delete (BANK defined) transactions with given ids
      operationId: deleteWithPostUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: transactions
        description: transactions
        required: true
        schema:
          $ref: '#/definitions/TransactionRequestListModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TransactionResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/transactions/enums:
    get:
      tags:
      - Transaction Management Services
      summary: Get transaction enums list
      operationId: getEnumsUsingGET_1
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TransactionEnumsResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/transactions/grid:
    get:
      tags:
      - Transaction Management Services
      summary: Get transaction grid definition
      operationId: getGridDataUsingGET_1
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GridInfoModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/transactions/id/{id}:
    get:
      tags:
      - Transaction Management Services
      summary: Returns a single transaction with given id
      operationId: getTransactionByIdUsingGET
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TransactionResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/transactions/status:
    post:
      tags:
      - Transaction Management Services
      summary: Partial batch update of one or more transactions.  Current implementation supports updating only Status attribute.
      operationId: updateStatusUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: partialUpdateRequest
        description: partialUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/PartialUpdateListModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TransactionResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/transactions/update:
    put:
      tags:
      - Transaction Management Services
      summary: Update transactions with given values
      operationId: saveTransactionUsingPUT
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: transactionRequest
        description: transactionRequest
        required: true
        schema:
          $ref: '#/definitions/ItemListModelOfTransactionModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TransactionResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/user/:
    get:
      tags:
      - user-controller
      summary: Extract user information from token to use in UI
      operationId: getUserUsingGET
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CFFUser'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/v1/accounts/:
    get:
      tags:
      - V1 - Account Management Services
      summary: retrieveAll
      operationId: retrieveAllUsingGET
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfAccountResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    post:
      tags:
      - V1 - Account Management Services
      summary: Create an entity
      operationId: createUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: requestModel
        description: requestModel
        required: true
        schema:
          $ref: '#/definitions/AccountModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AccountResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - V1 - Account Management Services
      summary: deleteAll
      operationId: deleteAllUsingDELETE
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/v1/accounts/bulk:
    post:
      tags:
      - V1 - Account Management Services
      summary: createAll
      operationId: createAllUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inputModels
        description: inputModels
        required: true
        schema:
          $ref: '#/definitions/AbstractModelBagOfAccountModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfAccountResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    put:
      tags:
      - V1 - Account Management Services
      summary: replaceAll
      operationId: replaceAllUsingPUT
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inputModels
        description: inputModels
        required: true
        schema:
          $ref: '#/definitions/AbstractModelBagOfAccountModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfAccountResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    patch:
      tags:
      - V1 - Account Management Services
      summary: patchAll
      operationId: patchAllUsingPATCH
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inputModels
        description: inputModels
        required: true
        schema:
          $ref: '#/definitions/AbstractModelBagOfAccountModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfAccountResponseModel'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/v1/accounts/{id}:
    get:
      tags:
      - V1 - Account Management Services
      summary: Retrieve an entity
      operationId: retrieveUsingGET
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AccountResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    put:
      tags:
      - V1 - Account Management Services
      summary: replace
      operationId: replaceUsingPUT
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: requestModel
        description: requestModel
        required: true
        schema:
          $ref: '#/definitions/AccountModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AccountResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - V1 - Account Management Services
      summary: delete
      operationId: deleteUsingDELETE_1
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            type: object
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
    patch:
      tags:
      - V1 - Account Management Services
      summary: patch
      operationId: patchUsingPATCH
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: requestModel
        description: requestModel
        required: true
        schema:
          $ref: '#/definitions/AccountModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AccountResponseModel'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/v1/companies/:
    get:
      tags:
      - V1 - Company Management Services
      summary: retrieveAll
      operationId: retrieveAllUsingGET_1
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfCompanyModelResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    post:
      tags:
      - V1 - Company Management Services
      summary: Create an entity
      operationId: createUsingPOST_1
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: requestModel
        description: requestModel
        required: true
        schema:
          $ref: '#/definitions/CompanyModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CompanyModelResponse'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - V1 - Company Management Services
      summary: deleteAll
      operationId: deleteAllUsingDELETE_1
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/v1/companies/bulk:
    post:
      tags:
      - V1 - Company Management Services
      summary: createAll
      operationId: createAllUsingPOST_1
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inputModels
        description: inputModels
        required: true
        schema:
          $ref: '#/definitions/AbstractModelBagOfCompanyModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfCompanyModelResponse'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    put:
      tags:
      - V1 - Company Management Services
      summary: replaceAll
      operationId: replaceAllUsingPUT_1
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inputModels
        description: inputModels
        required: true
        schema:
          $ref: '#/definitions/AbstractModelBagOfCompanyModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfCompanyModelResponse'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    patch:
      tags:
      - V1 - Company Management Services
      summary: patchAll
      operationId: patchAllUsingPATCH_1
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inputModels
        description: inputModels
        required: true
        schema:
          $ref: '#/definitions/AbstractModelBagOfCompanyModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfCompanyModelResponse'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/v1/companies/{id}:
    get:
      tags:
      - V1 - Company Management Services
      summary: Retrieve an entity
      operationId: retrieveUsingGET_1
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CompanyModelResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    put:
      tags:
      - V1 - Company Management Services
      summary: replace
      operationId: replaceUsingPUT_1
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: requestModel
        description: requestModel
        required: true
        schema:
          $ref: '#/definitions/CompanyModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CompanyModelResponse'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - V1 - Company Management Services
      summary: delete
      operationId: deleteUsingDELETE_3
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            type: object
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
    patch:
      tags:
      - V1 - Company Management Services
      summary: patch
      operationId: patchUsingPATCH_1
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: requestModel
        description: requestModel
        required: true
        schema:
          $ref: '#/definitions/CompanyModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CompanyModelResponse'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/v1/counterparties/:
    get:
      tags:
      - V1 - Counterparty Management Services
      summary: retrieveAll
      operationId: retrieveAllUsingGET_2
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfCounterPartyResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    post:
      tags:
      - V1 - Counterparty Management Services
      summary: Create an entity
      operationId: createUsingPOST_2
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: requestModel
        description: requestModel
        required: true
        schema:
          $ref: '#/definitions/CounterPartyModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CounterPartyResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - V1 - Counterparty Management Services
      summary: deleteAll
      operationId: deleteAllUsingDELETE_2
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/v1/counterparties/bulk:
    post:
      tags:
      - V1 - Counterparty Management Services
      summary: createAll
      operationId: createAllUsingPOST_2
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inputModels
        description: inputModels
        required: true
        schema:
          $ref: '#/definitions/AbstractModelBagOfCounterPartyModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfCounterPartyResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    put:
      tags:
      - V1 - Counterparty Management Services
      summary: replaceAll
      operationId: replaceAllUsingPUT_2
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inputModels
        description: inputModels
        required: true
        schema:
          $ref: '#/definitions/AbstractModelBagOfCounterPartyModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfCounterPartyResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    patch:
      tags:
      - V1 - Counterparty Management Services
      summary: patchAll
      operationId: patchAllUsingPATCH_2
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inputModels
        description: inputModels
        required: true
        schema:
          $ref: '#/definitions/AbstractModelBagOfCounterPartyModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfCounterPartyResponseModel'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/v1/counterparties/criteria:
    post:
      tags:
      - V1 - Counterparty Management Services
      summary: Returns list of counter party id/name pairs based on the search and filter criteria passed in request body.
      operationId: getCounterPartyNameListUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/ListRequestModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CounterPartyListResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/v1/counterparties/{id}:
    get:
      tags:
      - V1 - Counterparty Management Services
      summary: Retrieve an entity
      operationId: retrieveUsingGET_2
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CounterPartyResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    put:
      tags:
      - V1 - Counterparty Management Services
      summary: replace
      operationId: replaceUsingPUT_2
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: requestModel
        description: requestModel
        required: true
        schema:
          $ref: '#/definitions/CounterPartyModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CounterPartyResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - V1 - Counterparty Management Services
      summary: delete
      operationId: deleteUsingDELETE_4
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            type: object
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
    patch:
      tags:
      - V1 - Counterparty Management Services
      summary: patch
      operationId: patchUsingPATCH_2
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: requestModel
        description: requestModel
        required: true
        schema:
          $ref: '#/definitions/CounterPartyModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CounterPartyResponseModel'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/v1/forecastviews/:
    get:
      tags:
      - V1 - ForecastView Management Services
      summary: retrieveAll
      operationId: retrieveAllUsingGET_3
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfForecastViewModelResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    post:
      tags:
      - V1 - ForecastView Management Services
      summary: Create an entity
      operationId: createUsingPOST_3
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: requestModel
        description: requestModel
        required: true
        schema:
          $ref: '#/definitions/ForecastViewModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ForecastViewModelResponse'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - V1 - ForecastView Management Services
      summary: deleteAll
      operationId: deleteAllUsingDELETE_3
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/v1/forecastviews/bulk:
    post:
      tags:
      - V1 - ForecastView Management Services
      summary: createAll
      operationId: createAllUsingPOST_3
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inputModels
        description: inputModels
        required: true
        schema:
          $ref: '#/definitions/AbstractModelBagOfForecastViewModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfForecastViewModelResponse'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    put:
      tags:
      - V1 - ForecastView Management Services
      summary: replaceAll
      operationId: replaceAllUsingPUT_3
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inputModels
        description: inputModels
        required: true
        schema:
          $ref: '#/definitions/AbstractModelBagOfForecastViewModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfForecastViewModelResponse'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    patch:
      tags:
      - V1 - ForecastView Management Services
      summary: patchAll
      operationId: patchAllUsingPATCH_3
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inputModels
        description: inputModels
        required: true
        schema:
          $ref: '#/definitions/AbstractModelBagOfForecastViewModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfForecastViewModelResponse'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/v1/forecastviews/{id}:
    get:
      tags:
      - V1 - ForecastView Management Services
      summary: Retrieve an entity
      operationId: retrieveUsingGET_3
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ForecastViewModelResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    put:
      tags:
      - V1 - ForecastView Management Services
      summary: replace
      operationId: replaceUsingPUT_3
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: requestModel
        description: requestModel
        required: true
        schema:
          $ref: '#/definitions/ForecastViewModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ForecastViewModelResponse'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - V1 - ForecastView Management Services
      summary: delete
      operationId: deleteUsingDELETE_5
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            type: object
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
    patch:
      tags:
      - V1 - ForecastView Management Services
      summary: patch
      operationId: patchUsingPATCH_3
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: requestModel
        description: requestModel
        required: true
        schema:
          $ref: '#/definitions/ForecastViewModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ForecastViewModelResponse'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/v1/kpi/:
    get:
      tags:
      - KPI Services
      summary: retrieveAll
      operationId: retrieveAllUsingGET_5
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfKeyPerformanceIndicatorResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    post:
      tags:
      - KPI Services
      summary: Create an entity
      operationId: createUsingPOST_5
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: requestModel
        description: requestModel
        required: true
        schema:
          $ref: '#/definitions/KeyPerformanceIndicatorModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/KeyPerformanceIndicatorResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - KPI Services
      summary: deleteAll
      operationId: deleteAllUsingDELETE_5
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/v1/kpi/bulk:
    post:
      tags:
      - KPI Services
      summary: createAll
      operationId: createAllUsingPOST_5
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inputModels
        description: inputModels
        required: true
        schema:
          $ref: '#/definitions/AbstractModelBagOfKeyPerformanceIndicatorModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfKeyPerformanceIndicatorResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    put:
      tags:
      - KPI Services
      summary: replaceAll
      operationId: replaceAllUsingPUT_5
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inputModels
        description: inputModels
        required: true
        schema:
          $ref: '#/definitions/AbstractModelBagOfKeyPerformanceIndicatorModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfKeyPerformanceIndicatorResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    patch:
      tags:
      - KPI Services
      summary: patchAll
      operationId: patchAllUsingPATCH_5
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inputModels
        description: inputModels
        required: true
        schema:
          $ref: '#/definitions/AbstractModelBagOfKeyPerformanceIndicatorModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfKeyPerformanceIndicatorResponseModel'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/v1/kpi/{id}:
    get:
      tags:
      - KPI Services
      summary: Retrieve an entity
      operationId: retrieveUsingGET_5
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/KeyPerformanceIndicatorResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    put:
      tags:
      - KPI Services
      summary: replace
      operationId: replaceUsingPUT_5
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: requestModel
        description: requestModel
        required: true
        schema:
          $ref: '#/definitions/KeyPerformanceIndicatorModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/KeyPerformanceIndicatorResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - KPI Services
      summary: delete
      operationId: deleteUsingDELETE_7
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            type: object
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
    patch:
      tags:
      - KPI Services
      summary: patch
      operationId: patchUsingPATCH_5
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: requestModel
        description: requestModel
        required: true
        schema:
          $ref: '#/definitions/KeyPerformanceIndicatorModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/KeyPerformanceIndicatorResponseModel'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/v1/kpimanager/:
    get:
      tags:
      - KPI Management Services
      summary: retrieveAll
      operationId: retrieveAllUsingGET_4
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfKpiManagementResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    post:
      tags:
      - KPI Management Services
      summary: Create an entity
      operationId: createUsingPOST_4
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: requestModel
        description: requestModel
        required: true
        schema:
          $ref: '#/definitions/KpiManagementModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/KpiManagementResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - KPI Management Services
      summary: deleteAll
      operationId: deleteAllUsingDELETE_4
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/v1/kpimanager/bulk:
    post:
      tags:
      - KPI Management Services
      summary: createAll
      operationId: createAllUsingPOST_4
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inputModels
        description: inputModels
        required: true
        schema:
          $ref: '#/definitions/AbstractModelBagOfKpiManagementModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfKpiManagementResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    put:
      tags:
      - KPI Management Services
      summary: replaceAll
      operationId: replaceAllUsingPUT_4
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inputModels
        description: inputModels
        required: true
        schema:
          $ref: '#/definitions/AbstractModelBagOfKpiManagementModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfKpiManagementResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    patch:
      tags:
      - KPI Management Services
      summary: patchAll
      operationId: patchAllUsingPATCH_4
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inputModels
        description: inputModels
        required: true
        schema:
          $ref: '#/definitions/AbstractModelBagOfKpiManagementModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfKpiManagementResponseModel'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/v1/kpimanager/{id}:
    get:
      tags:
      - KPI Management Services
      summary: Retrieve an entity
      operationId: retrieveUsingGET_4
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/KpiManagementResponseModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    put:
      tags:
      - KPI Management Services
      summary: replace
      operationId: replaceUsingPUT_4
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: requestModel
        description: requestModel
        required: true
        schema:
          $ref: '#/definitions/KpiManagementModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/KpiManagementResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - KPI Management Services
      summary: delete
      operationId: deleteUsingDELETE_6
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            type: object
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
    patch:
      tags:
      - KPI Management Services
      summary: patch
      operationId: patchUsingPATCH_4
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: requestModel
        description: requestModel
        required: true
        schema:
          $ref: '#/definitions/KpiManagementModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/KpiManagementResponseModel'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/v1/transactions/:
    get:
      tags:
      - V1 - Transaction Management Services
      summary: retrieveAll
      operationId: retrieveAllUsingGET_6
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfTransactionModelResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    post:
      tags:
      - V1 - Transaction Management Services
      summary: Create an entity
      operationId: createUsingPOST_7
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: requestModel
        description: requestModel
        required: true
        schema:
          $ref: '#/definitions/TransactionModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TransactionModelResponse'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - V1 - Transaction Management Services
      summary: deleteAll
      operationId: deleteAllUsingDELETE_6
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/v1/transactions/bulk:
    post:
      tags:
      - V1 - Transaction Management Services
      summary: createAll
      operationId: createAllUsingPOST_6
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inputModels
        description: inputModels
        required: true
        schema:
          $ref: '#/definitions/AbstractModelBagOfTransactionModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfTransactionModelResponse'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    put:
      tags:
      - V1 - Transaction Management Services
      summary: replaceAll
      operationId: replaceAllUsingPUT_6
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inputModels
        description: inputModels
        required: true
        schema:
          $ref: '#/definitions/AbstractModelBagOfTransactionModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfTransactionModelResponse'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    patch:
      tags:
      - V1 - Transaction Management Services
      summary: patchAll
      operationId: patchAllUsingPATCH_6
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inputModels
        description: inputModels
        required: true
        schema:
          $ref: '#/definitions/AbstractModelBagOfTransactionModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AbstractModelBagOfTransactionModelResponse'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/v1/transactions/{id}:
    get:
      tags:
      - V1 - Transaction Management Services
      summary: Retrieve an entity
      operationId: retrieveUsingGET_7
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TransactionModelResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    put:
      tags:
      - V1 - Transaction Management Services
      summary: replace
      operationId: replaceUsingPUT_6
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: requestModel
        description: requestModel
        required: true
        schema:
          $ref: '#/definitions/TransactionModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TransactionModelResponse'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - V1 - Transaction Management Services
      summary: delete
      operationId: deleteUsingDELETE_9
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            type: object
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
    patch:
      tags:
      - V1 - Transaction Management Services
      summary: patch
      operationId: patchUsingPATCH_6
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: requestModel
        description: requestModel
        required: true
        schema:
          $ref: '#/definitions/TransactionModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TransactionModelResponse'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/validate:
    get:
      tags:
      - validation-controller
      summary: validate
      operationId: validateUsingGET
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/validate/ra:
    get:
      tags:
      - validation-controller
      summary: ra
      operationId: raUsingGET
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/validate/rw:
    get:
      tags:
      - validation-controller
      summary: rw
      operationId: rwUsingGET
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/validate/rwo:
    get:
      tags:
      - validation-controller
      summary: rwo
      operationId: rwoUsingGET
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/validate/wa:
    get:
      tags:
      - validation-controller
      summary: wa
      operationId: waUsingGET
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/whatifanalysis/activities/:
    get:
      tags:
      - what-if-analysis-controller
      summary: Return what-if-analysis activities for a company
      operationId: getActivitiesForCompanyUsingGET
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/whatifanalysis/activities/delete/{id}:
    post:
      tags:
      - what-if-analysis-controller
      summary: Delete what-if-analysis activity with an id as a post
      operationId: deleteActivityWithPostUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/whatifanalysis/activities/{activityId}/adjustments/:
    post:
      tags:
      - what-if-analysis-controller
      summary: Add adjustments to activity with given id
      operationId: addAdjustmentsUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: activityId
        in: path
        description: activityId
        required: true
        type: integer
        format: int64
      - in: body
        name: request
        description: request
        required: true
        schema:
          $ref: '#/definitions/ItemListModelOfBaseActivityAdjustmentModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ActivityModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/whatifanalysis/activities/{id}:
    delete:
      tags:
      - what-if-analysis-controller
      summary: delete what-if-analysis activity with an id
      operationId: deleteActivityUsingDELETE
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/whatifanalysis/adjustments/category/delete/{id}:
    post:
      tags:
      - what-if-analysis-controller
      summary: Delete what-if-analysis category adjustment with an id as a post
      operationId: deleteCategoryAdjustmentWithPostUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/whatifanalysis/adjustments/transaction/delete/{id}:
    post:
      tags:
      - what-if-analysis-controller
      summary: Delete what-if-analysis transaction adjustment with an id as a post
      operationId: deleteTransactionAdjustmentWithPostUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/whatifanalysis/scenarios/:
    get:
      tags:
      - what-if-analysis-controller
      summary: Get scenarios for a company
      operationId: getScenariosForCompanyUsingGET
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ScenarioModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    post:
      tags:
      - what-if-analysis-controller
      summary: Add scenario(s) for company
      operationId: addScenarioUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: scenarios
        description: scenarios
        required: true
        schema:
          $ref: '#/definitions/ItemListModelOfScenarioModel'
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ScenarioModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/whatifanalysis/scenarios/copy/{id}:
    post:
      tags:
      - what-if-analysis-controller
      summary: Copy a what-if-analysis scenario with an id
      operationId: copyScenarioUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ScenarioModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/whatifanalysis/scenarios/delete/{id}:
    post:
      tags:
      - what-if-analysis-controller
      summary: Delete what-if-analysis scenario with an id as a post
      operationId: deleteScenarioWithPostUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/api/whatifanalysis/scenarios/{id}:
    get:
      tags:
      - what-if-analysis-controller
      summary: Return what-if-analysis scenario for an is
      operationId: getScenarioUsingGET
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ScenarioModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    delete:
      tags:
      - what-if-analysis-controller
      summary: delete what-if-analysis scenario with an id
      operationId: deleteScenarioUsingDELETE
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseHeader'
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
  /cff/app/api/whatifanalysis/scenarios/{scenarioId}/activities/:
    get:
      tags:
      - what-if-analysis-controller
      summary: Return what-if-analysis activities for a scenario with given id
      operationId: getActivitiesUsingGET
      produces:
      - application/json
      parameters:
      - name: scenarioId
        in: path
        description: scenarioId
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
    post:
      tags:
      - what-if-analysis-controller
      summary: Add activity(ies) to a scenario with given id
      operationId: addActivitiesUsingPOST
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: activities
        description: activities
        required: true
        schema:
          $ref: '#/definitions/ItemListModelOfActivityModel'
      - name: scenarioId
        in: path
        description: scenarioId
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ScenarioModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/test-data:
    post:
      tags:
      - test-data-controller
      summary: addBoth
      operationId: addBothUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: accountModel
        description: accountModel
        required: true
        schema:
          $ref: '#/definitions/AccountModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TransactionResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/test-data/accounts:
    post:
      tags:
      - test-data-controller
      summary: accounts
      operationId: accountsUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: accountModel
        description: accountModel
        required: true
        schema:
          $ref: '#/definitions/AccountModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AccountResponseListModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/test-data/transactions:
    post:
      tags:
      - test-data-controller
      summary: transactions
      operationId: transactionsUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: transactionModel
        description: transactionModel
        required: true
        schema:
          $ref: '#/definitions/TransactionModelReq'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TransactionResponseModel'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/token:
    post:
      tags:
      - token-controller
      summary: generate
      operationId: generateUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: CFFUser
        description: CFFUser
        required: true
        schema:
          $ref: '#/definitions/CFFUser'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
  /cff/app/token/ll:
    post:
      tags:
      - token-controller
      summary: generateLL
      operationId: generateLLUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: CFFUser
        description: CFFUser
        required: true
        schema:
          $ref: '#/definitions/CFFUser'
      - name: ttlSeconds
        in: query
        description: ttlSeconds
        required: false
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          schema:
            type: string
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - JWT: []
securityDefinitions:
  JWT:
    type: apiKey
    name: Authorization
    in: header
definitions:
  AbstractModelBagOfAccountModel:
    type: object
    properties:
      itemStream:
        $ref: '#/definitions/StreamOfAccountModel'
      items:
        type: array
        items:
          $ref: '#/definitions/AccountModel'
    title: AbstractModelBagOfAccountModel
  AbstractModelBagOfAccountResponseModel:
    type: object
    properties:
      empty:
        type: boolean
      items:
        type: array
        items:
          $ref: '#/definitions/AccountResponseModel'
      notEmpty:
        type: boolean
    title: AbstractModelBagOfAccountResponseModel
  AbstractModelBagOfCompanyModel:
    type: object
    properties:
      itemStream:
        $ref: '#/definitions/StreamOfCompanyModel'
      items:
        type: array
        items:
          $ref: '#/definitions/CompanyModel'
    title: AbstractModelBagOfCompanyModel
  AbstractModelBagOfCompanyModelResponse:
    type: object
    properties:
      empty:
        type: boolean
      items:
        type: array
        items:
          $ref: '#/definitions/CompanyModelResponse'
      notEmpty:
        type: boolean
    title: AbstractModelBagOfCompanyModelResponse
  AbstractModelBagOfCounterPartyModel:
    type: object
    properties:
      itemStream:
        $ref: '#/definitions/StreamOfCounterPartyModel'
      items:
        type: array
        items:
          $ref: '#/definitions/CounterPartyModel'
    title: AbstractModelBagOfCounterPartyModel
  AbstractModelBagOfCounterPartyResponseModel:
    type: object
    properties:
      empty:
        type: boolean
      items:
        type: array
        items:
          $ref: '#/definitions/CounterPartyResponseModel'
      notEmpty:
        type: boolean
    title: AbstractModelBagOfCounterPartyResponseModel
  AbstractModelBagOfForecastViewModel:
    type: object
    properties:
      itemStream:
        $ref: '#/definitions/StreamOfForecastViewModel'
      items:
        type: array
        items:
          $ref: '#/definitions/ForecastViewModel'
    title: AbstractModelBagOfForecastViewModel
  AbstractModelBagOfForecastViewModelResponse:
    type: object
    properties:
      empty:
        type: boolean
      items:
        type: array
        items:
          $ref: '#/definitions/ForecastViewModelResponse'
      notEmpty:
        type: boolean
    title: AbstractModelBagOfForecastViewModelResponse
  AbstractModelBagOfKeyPerformanceIndicatorModel:
    type: object
    properties:
      itemStream:
        $ref: '#/definitions/StreamOfKeyPerformanceIndicatorModel'
      items:
        type: array
        items:
          $ref: '#/definitions/KeyPerformanceIndicatorModel'
    title: AbstractModelBagOfKeyPerformanceIndicatorModel
  AbstractModelBagOfKeyPerformanceIndicatorResponseModel:
    type: object
    properties:
      empty:
        type: boolean
      items:
        type: array
        items:
          $ref: '#/definitions/KeyPerformanceIndicatorResponseModel'
      notEmpty:
        type: boolean
    title: AbstractModelBagOfKeyPerformanceIndicatorResponseModel
  AbstractModelBagOfKpiManagementModel:
    type: object
    properties:
      itemStream:
        $ref: '#/definitions/StreamOfKpiManagementModel'
      items:
        type: array
        items:
          $ref: '#/definitions/KpiManagementModel'
    title: AbstractModelBagOfKpiManagementModel
  AbstractModelBagOfKpiManagementResponseModel:
    type: object
    properties:
      empty:
        type: boolean
      items:
        type: array
        items:
          $ref: '#/definitions/KpiManagementResponseModel'
      notEmpty:
        type: boolean
    title: AbstractModelBagOfKpiManagementResponseModel
  AbstractModelBagOfTransactionModel:
    type: object
    properties:
      itemStream:
        $ref: '#/definitions/StreamOfTransactionModel'
      items:
        type: array
        items:
          $ref: '#/definitions/TransactionModel'
    title: AbstractModelBagOfTransactionModel
  AbstractModelBagOfTransactionModelResponse:
    type: object
    properties:
      empty:
        type: boolean
      items:
        type: array
        items:
          $ref: '#/definitions/TransactionModelResponse'
      notEmpty:
        type: boolean
    title: AbstractModelBagOfTransactionModelResponse
  AccountBalanceIdModel:
    type: object
    properties:
      accountId:
        type: integer
        format: int64
      accountNum:
        type: string
      balanceDate:
        type: string
        format: date
      bankId:
        type: string
      externalRefId:
        type: string
      id:
        type: integer
        format: int64
    title: AccountBalanceIdModel
  AccountBalanceModel:
    type: object
    required:
    - externalRefId
    properties:
      accountId:
        type: integer
        format: int64
      accountNum:
        type: string
      balanceDate:
        type: string
        format: date
      bankId:
        type: string
      closingBalance:
        type: number
      externalRefId:
        type: string
        example: 011101024-111111100
        description: Unique identifier of the account balance in the host system
        minLength: 0
        maxLength: 64
      id:
        type: integer
        format: int64
      numTransactions:
        type: integer
        format: int64
      oneDayFloatAmt:
        type: number
      openingBalance:
        type: number
      predictedHighValue:
        type: number
      predictedLowValue:
        type: number
      predictedValue:
        type: number
      source:
        type: string
      threeDayFloatAmt:
        type: number
      totalCredit:
        type: number
      totalDebit:
        type: number
      twoDayFloatAmt:
        type: number
    title: AccountBalanceModel
  AccountBalanceRequestListModel:
    type: object
    properties:
      accountBalanceIds:
        type: array
        items:
          $ref: '#/definitions/AccountBalanceIdModel'
    title: AccountBalanceRequestListModel
  AccountBalanceResponseListModel:
    type: object
    properties:
      header:
        $ref: '#/definitions/ResponseHeader'
      items:
        type: array
        items:
          $ref: '#/definitions/AccountBalanceModel'
    title: AccountBalanceResponseListModel
  AccountIdModel:
    type: object
    properties:
      accountId:
        type: integer
        format: int64
      accountNum:
        type: string
      bankId:
        type: string
      companyList:
        type: array
        items:
          type: string
    title: AccountIdModel
  AccountIdRequestListModel:
    type: object
    properties:
      accountIds:
        type: array
        items:
          $ref: '#/definitions/AccountIdModel'
    title: AccountIdRequestListModel
  AccountModel:
    type: object
    properties:
      accountId:
        type: integer
        format: int64
      accountName:
        type: string
      accountNum:
        type: string
      accountType:
        type: string
      bankCountryCode:
        type: string
      bankId:
        type: string
      bankName:
        type: string
      cashFlowEnabled:
        type: boolean
      companyList:
        type: array
        uniqueItems: true
        items:
          type: string
      currency:
        type: string
      externalRefId:
        type: string
      id:
        type: integer
        format: int64
      predictedLastUpdate:
        type: string
        format: date-time
      source:
        type: string
      sourceId:
        type: string
      status:
        type: string
    title: AccountModel
  AccountResponseListModel:
    type: object
    properties:
      header:
        $ref: '#/definitions/ResponseHeader'
      items:
        type: array
        items:
          $ref: '#/definitions/AccountModel'
    title: AccountResponseListModel
  AccountResponseModel:
    type: object
    properties:
      accountId:
        type: integer
        format: int64
      accountName:
        type: string
      accountNum:
        type: string
      accountType:
        type: string
      bankCountryCode:
        type: string
      bankId:
        type: string
      bankName:
        type: string
      cashFlowEnabled:
        type: boolean
      companyList:
        type: array
        uniqueItems: true
        items:
          type: string
      currency:
        type: string
      externalRefId:
        type: string
      predictedLastUpdate:
        type: string
        format: date-time
      source:
        type: string
      sourceId:
        type: string
      status:
        type: string
    title: AccountResponseModel
  ActivityModel:
    type: object
    discriminator: id
    properties:
      active:
        type: boolean
      adjustments:
        type: array
        items:
          $ref: '#/definitions/BaseActivityAdjustmentModel'
      company:
        type: string
      description:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
      scenarios:
        type: array
        items:
          $ref: '#/definitions/ScenarioModel'
    title: ActivityModel
    description: ActivityModel
  AdjustmentListRequestModel:
    type: object
    properties:
      ids:
        type: array
        items:
          type: integer
          format: int64
    title: AdjustmentListRequestModel
  AdjustmentModel:
    type: object
    properties:
      id:
        type: integer
        format: int64
      inflow:
        type: number
      inflowAdjusttype:
        type: string
      inflowDate:
        type: string
        format: date
      outflow:
        type: number
      outflowAdjusttype:
        type: string
      outflowDate:
        type: string
        format: date
      viewId:
        type: integer
        format: int64
    title: AdjustmentModel
  AdjustmentResponseModel:
    type: object
    properties:
      adjustments:
        type: array
        items:
          $ref: '#/definitions/AdjustmentModel'
      header:
        $ref: '#/definitions/ResponseHeader'
    title: AdjustmentResponseModel
  AmountsByAccountModel:
    type: object
    properties:
      accountId:
        type: integer
        format: int64
      accountName:
        type: string
      accountNum:
        type: string
      accountType:
        type: string
      cashAvailable:
        type: string
      closingBalance:
        type: string
      currency:
        type: string
      lastUpdate:
        type: string
        format: date-time
      openingBalance:
        type: string
      totalInflows:
        type: string
      totalOutflows:
        type: string
    title: AmountsByAccountModel
  AmountsByDayModel:
    type: object
    properties:
      actual:
        type: string
      forecasted:
        type: string
      forecastedHigh:
        type: string
      forecastedLow:
        type: string
      totalCredits:
        type: string
      totalDebits:
        type: string
      totalInflows:
        type: string
      totalOutflows:
        type: string
      totalPredicted:
        type: string
      totalPredictedHigh:
        type: string
      totalPredictedLow:
        type: string
    title: AmountsByDayModel
  AmountsByScenario:
    type: object
    properties:
      brandingText:
        type: string
      forecasted:
        type: number
      name:
        type: string
      totalInflows:
        type: number
      totalOutflows:
        type: number
    title: AmountsByScenario
  AtomicReferenceOfobject:
    type: object
    title: AtomicReferenceOfobject
  AuditLogModel:
    type: object
    properties:
      action:
        type: string
      auditType:
        type: string
      company:
        type: string
      detail:
        type: string
      detailCode:
        type: string
      id:
        type: integer
        format: int64
      logTime:
        type: string
        format: date-time
      recordSnapshot:
        type: string
      userId:
        type: string
    title: AuditLogModel
  AuditLogResponseModel:
    type: object
    properties:
      audits:
        type: array
        items:
          $ref: '#/definitions/AuditLogModel'
      header:
        $ref: '#/definitions/ResponseHeader'
    title: AuditLogResponseModel
  AuthRolesListRequestModel:
    type: object
    properties:
      ids:
        type: array
        items:
          type: integer
          format: int64
    title: AuthRolesListRequestModel
  AuthRolesModel:
    type: object
    properties:
      cffRoleId:
        type: string
      hostRoleId:
        type: string
      id:
        type: integer
        format: int64
    title: AuthRolesModel
  AuthRolesResponseModel:
    type: object
    properties:
      authRoles:
        type: array
        items:
          $ref: '#/definitions/AuthRolesModel'
      header:
        $ref: '#/definitions/ResponseHeader'
    title: AuthRolesResponseModel
  BaseActivityAdjustmentModel:
    type: object
    discriminator: activity
    properties:
      activity:
        $ref: '#/definitions/ActivityModel'
      id:
        type: integer
        format: int64
      inflow:
        type: boolean
      name:
        type: string
    title: BaseActivityAdjustmentModel
    description: ActivityModel
  CFFUser:
    type: object
    properties:
      cffFiTenantId:
        type: string
      companyId:
        type: string
      companyName:
        type: string
      email:
        type: string
      fiName:
        type: string
      locale:
        type: string
      name:
        type: string
      roles:
        type: string
      userId:
        type: string
    title: CFFUser
  CashPosAccountResponseModel:
    type: object
    properties:
      header:
        $ref: '#/definitions/ResponseHeader'
      rows:
        type: array
        items:
          $ref: '#/definitions/AmountsByAccountModel'
    title: CashPosAccountResponseModel
  CashPosRequestModel:
    type: object
    properties:
      endDate:
        type: string
        format: date
      period:
        type: string
      startDate:
        type: string
        format: date
      viewId:
        type: integer
        format: int64
    title: CashPosRequestModel
  CashPosResponseModel:
    type: object
    properties:
      header:
        $ref: '#/definitions/ResponseHeader'
      lastUpdateTime:
        type: string
      periods:
        type: array
        items:
          $ref: '#/definitions/PeriodModel'
      todaysPosition:
        $ref: '#/definitions/TodaysPositionModel'
    title: CashPosResponseModel
  CategorizationModelReq:
    type: object
    properties:
      categorizerId:
        type: integer
        format: int64
        description: The id of the categorizer user to create this categorization
      categoryId:
        type: integer
        format: int64
        description: The id of the category to which this categorization belongs
      id:
        type: integer
        format: int64
        description: The id of the categorization
      transactionId:
        type: integer
        format: int64
        description: The id of the transaction to which this categorization is applied to
    title: CategorizationModelReq
  CategorizationModelRes:
    type: object
    properties:
      categorizerId:
        type: integer
        format: int64
        description: The id of the categorizer user to create this categorization
      categoryId:
        type: integer
        format: int64
        description: The id of the category to which this categorization belongs
      transactionId:
        type: integer
        format: int64
        description: The id of the transaction to which this categorization is applied to
    title: CategorizationModelRes
  CategorizationSchemeModel:
    type: object
    properties:
      categories:
        type: array
        description: The list of categories that belong to this categorization
        items:
          $ref: '#/definitions/CategoryModel'
      id:
        type: integer
        format: int64
        description: The id of the categorization scheme
      name:
        type: string
        description: The name of this categorization
      ownerId:
        type: integer
        format: int64
        description: The id of the owner of this categorization
    title: CategorizationSchemeModel
  CategorizationSchemeResponseModel:
    type: object
    properties:
      categories:
        type: array
        description: The list of categories that belong to this categorization
        items:
          $ref: '#/definitions/CategoryModel'
      name:
        type: string
        description: The name of this categorization
      ownerId:
        type: integer
        format: int64
        description: The id of the owner of this categorization
    title: CategorizationSchemeResponseModel
  CategorizationSpecificationModel:
    type: object
    properties:
      categorizerModel:
        description: The categorizer that was used to producde this categorization specification
        $ref: '#/definitions/RulesBasedTransactionCategorizerModel'
      categoryId:
        type: integer
        format: int64
        description: The id of the category to which this categorization specification belongs
      id:
        type: integer
        format: int64
        description: The id of the categorization specification
      priority:
        type: integer
        format: int32
        description: The priority of the categorization specification
    title: CategorizationSpecificationModel
  CategorizationSpecificationResponseModel:
    type: object
    properties:
      categorizerModel:
        description: The categorizer that was used to producde this categorization specification
        $ref: '#/definitions/RulesBasedTransactionCategorizerModel'
      categoryId:
        type: integer
        format: int64
        description: The id of the category to which this categorization specification belongs
      priority:
        type: integer
        format: int32
        description: The priority of the categorization specification
    title: CategorizationSpecificationResponseModel
  CategoryModel:
    type: object
    properties:
      categorizationSchemeId:
        type: integer
        format: int64
        description: The id of the scheme to which this category belongs
      id:
        type: integer
        format: int64
        description: The id of the category
      inflow:
        type: boolean
        description: An indication of whether this category is an inflow or outflow
      name:
        type: string
        description: The name of the category
      ownerId:
        type: integer
        format: int64
        description: The id of the owner of this category
      parentCategoryId:
        type: integer
        format: int64
        description: The id of the parent of this category
      sortOrder:
        type: integer
        format: int32
        description: The sort order sequence of this category for presentation purposes
      subCategories:
        type: array
        description: The list of sub-categories that belong to this categorization
        items:
          $ref: '#/definitions/CategoryModel'
      transactionCategorizationCount:
        type: integer
        format: int64
        description: A count of the number of transactions that are currently categorized under this category
    title: CategoryModel
  CategoryUsageModel:
    type: object
    properties:
      adjustmentsCategorizationCount:
        type: integer
        format: int64
        description: A count of the number of adjustments that are currently categorized under this category
      isUsed:
        type: boolean
        description: Is category being used
      planCategorizationCount:
        type: integer
        format: int64
        description: A count of the number of plan items that are currently categorized under this category
      transactionCategorizationCount:
        type: integer
        format: int64
        description: A count of the number of transactions that are currently categorized under this category
      transactionCategorizationSpecificationsCount:
        type: integer
        format: int64
        description: A count of the number of transaction caetgorization specifications that are currently under this category
    title: CategoryUsageModel
  Clause:
    type: object
    properties:
      clause:
        type: array
        items:
          $ref: '#/definitions/Criteria'
      combinator:
        type: string
        enum:
        - AND
        - OR
      name:
        type: string
      negated:
        type: boolean
    title: Clause
  ColumnModel:
    type: object
    properties:
      columnName:
        type: string
      displayName:
        type: string
    title: ColumnModel
  CompanyIdModel:
    type: object
    properties:
      company:
        type: string
      id:
        type: integer
        format: int64
    title: CompanyIdModel
  CompanyListRequestModel:
    type: object
    properties:
      companyIds:
        type: array
        items:
          $ref: '#/definitions/CompanyIdModel'
    title: CompanyListRequestModel
  CompanyModel:
    type: object
    properties:
      company:
        type: string
      defaultPayablesAccount:
        type: integer
        format: int64
      defaultPayablesAccountId:
        type: integer
        format: int64
      defaultPayablesAccountNameNumBankId:
        type: string
      defaultReceivablesAccount:
        type: integer
        format: int64
      defaultReceivablesAccountId:
        type: integer
        format: int64
      defaultReceivablesAccountNameNumBankId:
        type: string
      defaultViewId:
        type: integer
        format: int64
      forecastingMethod:
        type: string
        enum:
        - BOTTOM_UP_FORECASTING
        - TOP_DOWN_FORECASTING
      generateInsights:
        type: boolean
      id:
        type: integer
        format: int64
      intakeStatus:
        type: string
        enum:
        - COMPLETE
        - IN_PROGRESS
        - NOT_STARTED
      preferredCurrency:
        type: string
      status:
        type: string
    title: CompanyModel
  CompanyModelResponse:
    type: object
    properties:
      company:
        type: string
      defaultPayablesAccount:
        type: integer
        format: int64
      defaultPayablesAccountId:
        type: integer
        format: int64
      defaultPayablesAccountNameNumBankId:
        type: string
      defaultReceivablesAccount:
        type: integer
        format: int64
      defaultReceivablesAccountId:
        type: integer
        format: int64
      defaultReceivablesAccountNameNumBankId:
        type: string
      defaultViewId:
        type: integer
        format: int64
      forecastingMethod:
        type: string
        enum:
        - BOTTOM_UP_FORECASTING
        - TOP_DOWN_FORECASTING
      generateInsights:
        type: boolean
      intakeStatus:
        type: string
        enum:
        - COMPLETE
        - IN_PROGRESS
        - NOT_STARTED
      preferredCurrency:
        type: string
      status:
        type: string
    title: CompanyModelResponse
  CompanyResponseModel:
    type: object
    properties:
      companies:
        type: array
        items:
          $ref: '#/definitions/CompanyModel'
      header:
        $ref: '#/definitions/ResponseHeader'
    title: CompanyResponseModel
  CounterPartyListResponseModel:
    type: object
    properties:
      header:
        $ref: '#/definitions/ResponseHeader'
      list:
        type: array
        items:
          $ref: '#/definitions/IdNamePair'
    title: CounterPartyListResponseModel
  CounterPartyModel:
    type: object
    properties:
      active:
        type: boolean
      company:
        type: string
      contactType:
        type: string
      createdBy:
        type: string
      createdDate:
        type: string
        format: date
      id:
        type: integer
        format: int64
      lastModifiedBy:
        type: string
      lastUpdatedDate:
        type: string
        format: date
      name:
        type: string
      primaryAddress1:
        type: string
      primaryAddress2:
        type: string
      primaryAddress3:
        type: string
      primaryCountry:
        type: string
      primaryEmail:
        type: string
      primaryPhone:
        type: string
      primaryPostalCode:
        type: string
      primaryProvince:
        type: string
      primaryState:
        type: string
      source:
        type: string
      sourceId:
        type: string
      status:
        type: string
    title: CounterPartyModel
  CounterPartyResponseModel:
    type: object
    properties:
      active:
        type: boolean
      company:
        type: string
      contactType:
        type: string
      createdBy:
        type: string
      createdDate:
        type: string
        format: date
      lastModifiedBy:
        type: string
      lastUpdatedDate:
        type: string
        format: date
      name:
        type: string
      primaryAddress1:
        type: string
      primaryAddress2:
        type: string
      primaryAddress3:
        type: string
      primaryCountry:
        type: string
      primaryEmail:
        type: string
      primaryPhone:
        type: string
      primaryPostalCode:
        type: string
      primaryProvince:
        type: string
      primaryState:
        type: string
      source:
        type: string
      sourceId:
        type: string
      status:
        type: string
    title: CounterPartyResponseModel
  Criteria:
    type: object
    properties:
      combinator:
        type: string
        enum:
        - AND
        - OR
      criteria:
        type: array
        items:
          $ref: '#/definitions/Criterion'
      negated:
        type: boolean
    title: Criteria
  Criterion:
    type: object
    properties:
      field:
        type: string
      id:
        type: integer
        format: int64
      operator:
        type: string
        enum:
        - BEGINS_WITH
        - CONTAINS
        - DOES_NOT_BEGIN_WITH
        - DOES_NOT_CONTAIN
        - DOES_NOT_END_WITH
        - ENDS_WITH
        - EQUALS
        - EQUALS_IGNORE_CASE
        - GREATER_THAN
        - GREATER_THAN_EQ
        - IS_NOT_NULL
        - IS_NULL
        - LESS_THAN
        - LESS_THAN_EQ
        - NOT_EQUALS
      value:
        type: string
    title: Criterion
  CurrencyRateListRequestModel:
    type: object
    properties:
      ids:
        type: array
        items:
          type: integer
          format: int64
    title: CurrencyRateListRequestModel
  CurrencyRateModel:
    type: object
    properties:
      fromCurrency:
        type: string
      id:
        type: integer
        format: int64
      marketConvention:
        type: string
      rate:
        type: number
        format: double
      rateDate:
        type: string
        format: date
      source:
        type: string
      toCurrency:
        type: string
    title: CurrencyRateModel
  CurrencyRateResponseModel:
    type: object
    properties:
      currencyRates:
        type: array
        items:
          $ref: '#/definitions/CurrencyRateModel'
      header:
        $ref: '#/definitions/ResponseHeader'
    title: CurrencyRateResponseModel
  DayInPeriodModel:
    type: object
    properties:
      amountsByAccount:
        type: array
        items:
          $ref: '#/definitions/AmountsByAccountModel'
      amountsByDay:
        $ref: '#/definitions/AmountsByDayModel'
      amountsByScenario:
        type: array
        items:
          $ref: '#/definitions/AmountsByScenario'
      date:
        type: string
        format: date
      numberOfActualTransactions:
        type: integer
        format: int64
      numberOfForecastTransactions:
        type: integer
        format: int64
    title: DayInPeriodModel
  DayOftheMonthPattern:
    type: object
    properties:
      bymonthday:
        type: array
        items:
          type: integer
          format: int32
      interval:
        type: integer
        format: int32
    title: DayOftheMonthPattern
  DayOftheYearPattern:
    type: object
    properties:
      bymonth:
        type: integer
        format: int32
      bymonthday:
        type: integer
        format: int32
    title: DayOftheYearPattern
  EndMode:
    type: object
    properties:
      endMode:
        type: string
        enum:
        - COUNT
        - NONE
        - UNTIL
      value:
        type: string
    title: EndMode
  EnumModel:
    type: object
    properties:
      code:
        type: string
      value:
        type: string
    title: EnumModel
  ForecastViewAccountModel:
    type: object
    properties:
      accountId:
        type: integer
        format: int64
      accountName:
        type: string
      accountNum:
        type: string
      accountType:
        type: string
      bankId:
        type: string
      currency:
        type: string
      id:
        type: integer
        format: int64
      lastUpdate:
        type: string
        format: date-time
      selected:
        type: boolean
      viewId:
        type: integer
        format: int64
    title: ForecastViewAccountModel
  ForecastViewModel:
    type: object
    properties:
      company:
        type: string
      default:
        type: boolean
      endDate:
        type: string
        format: date
      id:
        type: integer
        format: int64
      insight:
        type: boolean
      name:
        type: string
      numPeriod:
        type: integer
        format: int32
      period:
        type: string
      selectedAccounts:
        type: array
        items:
          $ref: '#/definitions/ForecastViewAccountModel'
      startDate:
        type: string
        format: date
      sysGen:
        type: boolean
      unSelectedAccounts:
        type: array
        items:
          $ref: '#/definitions/ForecastViewAccountModel'
    title: ForecastViewModel
  ForecastViewModelResponse:
    type: object
    properties:
      company:
        type: string
      default:
        type: boolean
      endDate:
        type: string
        format: date
      insight:
        type: boolean
      name:
        type: string
      numPeriod:
        type: integer
        format: int32
      period:
        type: string
      selectedAccounts:
        type: array
        items:
          $ref: '#/definitions/ForecastViewAccountModel'
      startDate:
        type: string
        format: date
      sysGen:
        type: boolean
      unSelectedAccounts:
        type: array
        items:
          $ref: '#/definitions/ForecastViewAccountModel'
    title: ForecastViewModelResponse
  ForecastViewResponseModel:
    type: object
    properties:
      header:
        $ref: '#/definitions/ResponseHeader'
      views:
        type: array
        items:
          $ref: '#/definitions/ForecastViewModel'
    title: ForecastViewResponseModel
  ForecastviewEnumsResponseModel:
    type: object
    properties:
      numberofperiods:
        type: array
        items:
          $ref: '#/definitions/EnumModel'
      period:
        type: array
        items:
          $ref: '#/definitions/EnumModel'
    title: ForecastviewEnumsResponseModel
  ForecastviewRequestListModel:
    type: object
    properties:
      ids:
        type: array
        items:
          type: integer
          format: int64
    title: ForecastviewRequestListModel
  FormInputBase:
    type: object
    properties:
      dependsOn:
        type: string
      id:
        type: string
      inputType:
        type: string
        enum:
        - CHART_MONTHLY
        - CHECKBOX
        - COLUMNS
        - DROPDOWN
        - DROPDOWN_MASKED
        - DROPDOWN_MULTISELECT
        - DUALRANGE_MONTHS
        - GROUP
        - ICON
        - MASKED
        - NUMERIC
        - NUMERIC_MASKED_CURR
        - OPTION
        - OPTION_ACCOUNT
        - OPTION_INSIGHTS
        - OPTION_MASK
        - RADIO_BUTTON
        - RADIO_DROPDOWN
        - RANGE_SLIDER
        - ROW
        - ROWS
        - SWITCH
        - TABLE
        - TEXT_DISPLAY
        - TEXT_INPUT
      label:
        type: string
      order:
        type: integer
        format: int32
    title: FormInputBase
  GoalListRequestModel:
    type: object
    properties:
      ids:
        type: array
        items:
          type: integer
          format: int64
    title: GoalListRequestModel
  GoalModel:
    type: object
    properties:
      balance:
        type: number
      id:
        type: integer
        format: int64
      probability:
        type: number
        format: float
        maximum: 100
        exclusiveMaximum: false
      viewId:
        type: integer
        format: int64
    title: GoalModel
  GoalResponseModel:
    type: object
    properties:
      goals:
        type: array
        items:
          $ref: '#/definitions/GoalModel'
      header:
        $ref: '#/definitions/ResponseHeader'
    title: GoalResponseModel
  GridColumnModel:
    type: object
    properties:
      displayName:
        type: string
      displayOrder:
        type: integer
        format: int32
      fieldName:
        type: string
      id:
        type: integer
        format: int64
      sortOrder:
        type: integer
        format: int32
      type:
        type: string
    title: GridColumnModel
  GridInfoModel:
    type: object
    properties:
      columns:
        type: array
        items:
          $ref: '#/definitions/GridColumnModel'
      gridName:
        type: string
      id:
        type: integer
        format: int64
      rowsPerPage:
        type: integer
        format: int32
    title: GridInfoModel
  GridInfoResponseModel:
    type: object
    properties:
      columns:
        type: array
        items:
          $ref: '#/definitions/GridColumnModel'
      gridName:
        type: string
      id:
        type: integer
        format: int64
      rowsPerPage:
        type: integer
        format: int32
    title: GridInfoResponseModel
  GridProfileDefaultRequestModel:
    type: object
    properties:
      company:
        type: string
      defaultProfile:
        type: boolean
      gridName:
        type: string
      profileId:
        type: integer
        format: int64
      userId:
        type: string
    title: GridProfileDefaultRequestModel
  GridProfileModel:
    type: object
    properties:
      company:
        type: string
      defaultProfile:
        type: boolean
      gridId:
        type: integer
        format: int64
      gridName:
        type: string
      profileId:
        type: integer
        format: int64
      profileName:
        type: string
      searchCriteria:
        type: array
        items:
          $ref: '#/definitions/SearchModel'
      sortCriteria:
        type: array
        items:
          $ref: '#/definitions/SortModel'
      userId:
        type: string
    title: GridProfileModel
  GridProfileResponseModel:
    type: object
    properties:
      header:
        $ref: '#/definitions/ResponseHeader'
      profiles:
        type: array
        items:
          $ref: '#/definitions/GridProfileModel'
    title: GridProfileResponseModel
  IdNamePair:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    title: IdNamePair
  InfoRowModel:
    type: object
    properties:
      imageId:
        type: string
      order:
        type: integer
        format: int32
      rowId:
        type: string
      text:
        type: string
    title: InfoRowModel
  InformationBoxModel:
    type: object
    properties:
      infoId:
        type: string
      rows:
        type: array
        items:
          $ref: '#/definitions/InfoRowModel'
      title:
        type: string
    title: InformationBoxModel
  InsightActionModel:
    type: object
    properties:
      action:
        type: string
      label:
        type: string
      type:
        type: string
    title: InsightActionModel
  InsightChart:
    type: object
    properties:
      type:
        type: string
      xlabel:
        type: string
      xvalues:
        type: array
        items:
          type: string
      ylabel:
        type: string
      yvalues:
        type: array
        items:
          type: string
    title: InsightChart
  InsightGrid:
    type: object
    properties:
      headers:
        type: array
        items:
          type: string
      rows:
        type: array
        items:
          type: array
          items:
            type: string
    title: InsightGrid
  InsightModel:
    type: object
    properties:
      action:
        type: array
        items:
          $ref: '#/definitions/InsightActionModel'
      amount:
        type: number
      chart:
        $ref: '#/definitions/InsightChart'
      comments:
        type: string
      company:
        type: string
      currency:
        type: string
      description:
        type: string
      dismissedTimestamp:
        type: string
        format: date-time
      future:
        type: boolean
      grid:
        $ref: '#/definitions/InsightGrid'
      locale:
        type: string
      name:
        type: string
      occurrenceDate:
        type: string
        format: date
      priority:
        type: string
      priorityValue:
        type: integer
        format: int32
      relatedAccountExternalId:
        type: string
      relatedAccountId:
        type: integer
        format: int64
      relatedAccountType:
        type: string
      relatedTransactionId:
        type: integer
        format: int64
      sortDate:
        type: string
        format: date
      sortScore:
        type: integer
        format: int32
      subject:
        type: string
      todo:
        type: boolean
      type:
        type: string
      userSubject:
        type: string
      value:
        type: object
        additionalProperties:
          type: string
      viewed:
        type: boolean
    title: InsightModel
  InsightResponseModel:
    type: object
    properties:
      header:
        $ref: '#/definitions/ResponseHeader'
      insights:
        type: array
        items:
          $ref: '#/definitions/InsightModel'
      insightsTitleViewAll:
        type: string
    title: InsightResponseModel
  IntakeFormResponseModel:
    type: object
    properties:
      company:
        type: string
      data:
        type: object
        additionalProperties:
          type: object
          additionalProperties:
            type: string
      header:
        $ref: '#/definitions/ResponseHeader'
      steps:
        type: array
        items:
          $ref: '#/definitions/StepFormModel'
    title: IntakeFormResponseModel
  IntakeRequestModel:
    type: object
    properties:
      company:
        type: string
      items:
        type: object
        additionalProperties:
          type: string
    title: IntakeRequestModel
  ItemListModelOfAccountBalanceModel:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/AccountBalanceModel'
    title: ItemListModelOfAccountBalanceModel
  ItemListModelOfAccountModel:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/AccountModel'
    title: ItemListModelOfAccountModel
  ItemListModelOfActivityModel:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/ActivityModel'
    title: ItemListModelOfActivityModel
  ItemListModelOfAdjustmentModel:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/AdjustmentModel'
    title: ItemListModelOfAdjustmentModel
  ItemListModelOfAuthRolesModel:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/AuthRolesModel'
    title: ItemListModelOfAuthRolesModel
  ItemListModelOfBaseActivityAdjustmentModel:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/BaseActivityAdjustmentModel'
    title: ItemListModelOfBaseActivityAdjustmentModel
  ItemListModelOfCompanyModel:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/CompanyModel'
    title: ItemListModelOfCompanyModel
  ItemListModelOfCurrencyRateModel:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/CurrencyRateModel'
    title: ItemListModelOfCurrencyRateModel
  ItemListModelOfGoalModel:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/GoalModel'
    title: ItemListModelOfGoalModel
  ItemListModelOfRecurringTransactionModel:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/RecurringTransactionModel'
    title: ItemListModelOfRecurringTransactionModel
  ItemListModelOfScenarioModel:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/ScenarioModel'
    title: ItemListModelOfScenarioModel
  ItemListModelOfTenantConfigModel:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/TenantConfigModelReq'
    title: ItemListModelOfTenantConfigModel
  ItemListModelOfTenantModel:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/TenantModelReq'
    title: ItemListModelOfTenantModel
  ItemListModelOfTransactionModel:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/TransactionModelReq'
    title: ItemListModelOfTransactionModel
  ItemListModelOfobject:
    type: object
    properties:
      items:
        type: array
        items:
          type: object
          properties: {}
    title: ItemListModelOfobject
  ItemListResponseModel:
    type: object
    properties:
      header:
        $ref: '#/definitions/ResponseHeader'
      items:
        $ref: '#/definitions/ItemListModelOfobject'
    title: ItemListResponseModel
  KeyPerformanceIndicatorModel:
    type: object
    properties:
      amberValue:
        type: number
        format: double
      biggerIsBetter:
        type: boolean
      description:
        type: string
      greenValue:
        type: number
        format: double
      id:
        type: integer
        format: int64
      kpiImplementation:
        type: string
      kpiParameters:
        type: array
        items:
          $ref: '#/definitions/KeyPerformanceIndicatorParameterModel'
      kpiValueType:
        type: string
      measurementInterval:
        type: integer
        format: int64
      measurementValue:
        type: number
        format: double
      name:
        type: string
      redValue:
        type: number
        format: double
    title: KeyPerformanceIndicatorModel
  KeyPerformanceIndicatorParameterModel:
    type: object
    properties:
      id:
        type: integer
        format: int64
      javaType:
        type: string
      name:
        type: string
      parameterType:
        type: integer
        format: int32
      value:
        type: string
    title: KeyPerformanceIndicatorParameterModel
  KeyPerformanceIndicatorResponseModel:
    type: object
    properties:
      amberValue:
        type: number
        format: double
      biggerIsBetter:
        type: boolean
      description:
        type: string
      greenValue:
        type: number
        format: double
      kpiImplementation:
        type: string
      kpiParameters:
        type: array
        items:
          $ref: '#/definitions/KeyPerformanceIndicatorParameterModel'
      kpiValueType:
        type: string
      measurementInterval:
        type: integer
        format: int64
      measurementValue:
        type: number
        format: double
      name:
        type: string
      redValue:
        type: number
        format: double
    title: KeyPerformanceIndicatorResponseModel
  KpiManagementModel:
    type: object
    properties:
      amberValue:
        type: number
        format: double
      biggerIsBetter:
        type: boolean
      companyId:
        type: integer
        format: int64
      description:
        type: string
      greenValue:
        type: number
        format: double
      id:
        type: integer
        format: int64
      kpiParameters:
        type: array
        items:
          $ref: '#/definitions/KpiManagementParameterModel'
      measurementInterval:
        type: integer
        format: int64
      measurementValue:
        type: number
        format: double
      name:
        type: string
      redValue:
        type: number
        format: double
      sourceKpi:
        $ref: '#/definitions/KeyPerformanceIndicatorModel'
    title: KpiManagementModel
  KpiManagementParameterModel:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      parameterType:
        type: integer
        format: int32
      value:
        type: string
    title: KpiManagementParameterModel
  KpiManagementResponseModel:
    type: object
    properties:
      amberValue:
        type: number
        format: double
      biggerIsBetter:
        type: boolean
      companyId:
        type: integer
        format: int64
      description:
        type: string
      greenValue:
        type: number
        format: double
      kpiParameters:
        type: array
        items:
          $ref: '#/definitions/KpiManagementParameterModel'
      measurementInterval:
        type: integer
        format: int64
      measurementValue:
        type: number
        format: double
      name:
        type: string
      redValue:
        type: number
        format: double
      sourceKpi:
        $ref: '#/definitions/KeyPerformanceIndicatorModel'
    title: KpiManagementResponseModel
  ListRequestModel:
    type: object
    properties:
      fields:
        type: string
      gridId:
        type: string
      pagination:
        $ref: '#/definitions/PaginationModel'
      profileId:
        type: integer
        format: int64
      searchCriteria:
        type: array
        items:
          $ref: '#/definitions/SearchModel'
      sortCriteria:
        type: array
        items:
          $ref: '#/definitions/SortModel'
      user:
        $ref: '#/definitions/UserModel'
    title: ListRequestModel
  ListResponseModel:
    type: object
    properties:
      columns:
        type: array
        items:
          $ref: '#/definitions/ColumnModel'
      header:
        $ref: '#/definitions/ResponseHeader'
      pagination:
        $ref: '#/definitions/PaginationModel'
      rows:
        type: array
        items:
          type: object
          additionalProperties:
            type: string
    title: ListResponseModel
  LocalTime:
    type: object
    properties:
      hour:
        type: integer
        format: int32
      minute:
        type: integer
        format: int32
      nano:
        type: integer
        format: int32
      second:
        type: integer
        format: int32
    title: LocalTime
  LocalTimeReq:
    type: object
    properties:
      hour:
        type: string
        format: byte
        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
      minute:
        type: string
        format: byte
        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
      nano:
        type: integer
        format: int32
      second:
        type: string
        format: byte
        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
    title: LocalTimeReq
  LocalTimeRes:
    type: object
    properties:
      hour:
        type: integer
        format: int32
      minute:
        type: integer
        format: int32
      nano:
        type: integer
        format: int32
      second:
        type: integer
        format: int32
    title: LocalTimeRes
  MessageModel:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
    title: MessageModel
  MlConfigModel:
    type: object
    properties:
      alwaysGetScoreData:
        type: boolean
      confidence:
        type: number
        format: float
      convertForMulticurrency:
        type: boolean
      iterationName:
        type: string
      mapeThreshold:
        type: integer
        format: int32
      modelName:
        type: string
      numberOfPoints:
        type: integer
        format: int32
      scoringURI:
        type: string
    title: MlConfigModel
  MlConfigResponse:
    type: object
    properties:
      configData:
        $ref: '#/definitions/MlConfigModel'
      header:
        $ref: '#/definitions/ResponseHeader'
    title: MlConfigResponse
  MlControlModel:
    type: object
    properties:
      systemLoginRealm:
        type: string
      systemPswd:
        type: string
      systemPurpose:
        type: string
      systemUser:
        type: string
    title: MlControlModel
  MlControlResponse:
    type: object
    properties:
      controlData:
        $ref: '#/definitions/MlControlModel'
      header:
        $ref: '#/definitions/ResponseHeader'
    title: MlControlResponse
  MonthlyPattern:
    type: object
    properties:
      dayofthemonth:
        $ref: '#/definitions/DayOftheMonthPattern'
      weekofthemonth:
        $ref: '#/definitions/WeekOftheMonthPattern'
    title: MonthlyPattern
  OAuthStatusResponse:
    type: object
    properties:
      company:
        type: string
      connectedSince:
        type: string
        format: date
      header:
        $ref: '#/definitions/ResponseHeader'
      isConnected:
        type: boolean
      keyDate:
        type: string
      source:
        type: string
      userGroup:
        type: string
    title: OAuthStatusResponse
  PaginationModel:
    type: object
    properties:
      rowsPerPage:
        type: integer
        format: int32
      startRow:
        type: integer
        format: int32
      totalInflowRows:
        type: integer
        format: int32
      totalOutflowRows:
        type: integer
        format: int32
      totalRows:
        type: integer
        format: int32
    title: PaginationModel
  PartialUpdateListModel:
    type: object
    properties:
      transactionIds:
        type: array
        items:
          type: integer
          format: int64
      updates:
        type: object
        additionalProperties:
          type: string
    title: PartialUpdateListModel
  PeriodModel:
    type: object
    properties:
      daysInPeriod:
        type: array
        items:
          $ref: '#/definitions/DayInPeriodModel'
      endDate:
        type: string
        format: date
      endDateAll:
        type: string
        format: date
      goalInflow:
        type: string
      goalOutflow:
        type: string
      includesForecasted:
        type: boolean
      includesHistForecasted:
        type: boolean
      includesPosted:
        type: boolean
      includesVariance:
        type: boolean
      numberOfForecastedTransactions:
        type: integer
        format: int64
      numberOfHistForecastedTransactions:
        type: integer
        format: int64
      numberOfPostedTransactions:
        type: integer
        format: int64
      period:
        type: string
        enum:
        - D
        - M
        - Q
        - W
      periodHeader:
        type: string
      periodHeaderForecast:
        type: string
      periodHeaderHistorical:
        type: string
      startDate:
        type: string
        format: date
      startDateAll:
        type: string
        format: date
      totalForecastedCashAvailable:
        type: string
      totalForecastedInflows:
        type: string
      totalForecastedOutflows:
        type: string
      totalHistForecastedCashAvailable:
        type: string
      totalHistForecastedInflows:
        type: string
      totalHistForecastedOutflows:
        type: string
      totalPostedCashAvailable:
        type: string
      totalPostedInflows:
        type: string
      totalPostedOutflows:
        type: string
      totalVarianceCashAvailable:
        type: string
      totalVarianceInflows:
        type: string
      totalVarianceOutflows:
        type: string
    title: PeriodModel
  PlanConfigRequestModel:
    type: object
    properties:
      active:
        type: boolean
      categories:
        type: array
        items:
          $ref: '#/definitions/CategoryModel'
      company:
        type: string
      copyFromPlan:
        type: integer
        format: int64
      id:
        type: integer
        format: int64
      name:
        type: string
      year:
        type: string
    title: PlanConfigRequestModel
  PlanGridResponseModel:
    type: object
    properties:
      categories:
        type: array
        items:
          $ref: '#/definitions/PlanItemResponseModel'
      gridId:
        type: integer
        format: int64
      gridName:
        type: string
      inflow:
        type: boolean
      subcategories:
        type: array
        items:
          $ref: '#/definitions/PlanItemResponseModel'
    title: PlanGridResponseModel
  PlanItemResponseModel:
    type: object
    properties:
      categoryId:
        type: integer
        format: int64
        description: The id of the category
      categoryName:
        type: string
        description: The name of the category
      id:
        type: integer
        format: int64
        description: The id of the plan item
      inflow:
        type: boolean
        description: An indication of whether this category is an inflow or outflow
      monthAmts:
        type: object
        description: "Month number (1-12), and Amount planned for that month"
        additionalProperties:
          type: string
      parentCategoryId:
        type: integer
        format: int64
        description: The id of the parent of this category
    title: PlanItemResponseModel
  PlanModelsResponseModel:
    type: object
    properties:
      header:
        $ref: '#/definitions/ResponseHeader'
      planModels:
        type: array
        items:
          $ref: '#/definitions/PlanResponseModel'
      scenarioModels:
        type: array
        items:
          $ref: '#/definitions/PlanResponseModel'
    title: PlanModelsResponseModel
  PlanResponseModel:
    type: object
    properties:
      active:
        type: boolean
      company:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
      planItems:
        type: array
        items:
          $ref: '#/definitions/PlanGridResponseModel'
      year:
        type: string
    title: PlanResponseModel
  QuickBookResponse:
    type: object
    properties:
      url:
        type: string
    title: QuickBookResponse
  RecurrencePattern:
    type: object
    required:
    - end
    - startDate
    properties:
      end:
        $ref: '#/definitions/EndMode'
      frequency:
        type: string
        enum:
        - DAILY
        - MONTHLY
        - NONE
        - WEEKLY
        - YEARLY
      monthly:
        $ref: '#/definitions/MonthlyPattern'
      nonBusinessDayMode:
        type: string
        enum:
        - NEXT
        - NONE
        - PREVIOUS
      startDate:
        type: string
        format: date
      weekly:
        $ref: '#/definitions/WeeklyPattern'
      yearly:
        $ref: '#/definitions/YearlyPattern'
    title: RecurrencePattern
  RecurringTransactionModel:
    type: object
    required:
    - externalRefId
    - recurrencePattern
    properties:
      accountAssigned:
        type: string
      accountId:
        type: integer
        format: int64
      accountNum:
        type: string
      bankId:
        type: string
      beneAccountName:
        type: string
        description: Beneficiary Bank account nickname in the host system used for transfer to account
        minLength: 1
        maxLength: 40
      beneAccountNum:
        type: string
        description: Beneficiary Bank account number in the host system used for transfer to account
        minLength: 1
        maxLength: 35
      beneBankId:
        type: string
        description: Beneficiary Bank Id/ABA in the host system used for transfer to account
      category:
        type: string
      company:
        type: string
      counterPartyId:
        type: integer
        format: int64
      counterPartyName:
        type: string
      enteredBy:
        type: string
      enteredTimestamp:
        type: string
        format: date-time
      externalRefId:
        type: string
        example: "1"
        description: Unique identifier of the transaction record in the host system
        minLength: 1
        maxLength: 64
      id:
        type: integer
        format: int64
      inflow:
        type: number
      isUserCategorized:
        type: boolean
      modifiedBy:
        type: string
      modifiedTimestamp:
        type: string
        format: date-time
      outflow:
        type: number
      payType:
        type: string
        description: Payment Type associated
      recurrencePattern:
        $ref: '#/definitions/RecurrencePattern'
      source:
        type: string
      status:
        type: string
      transactionCategoryId:
        type: integer
        format: int64
      transactionDetail:
        type: string
      transactionId:
        type: integer
        format: int64
      transactionType:
        type: string
    title: RecurringTransactionModel
  ResponseHeader:
    type: object
    properties:
      href:
        type: string
      httpStatus:
        type: string
        enum:
        - ACCEPTED
        - ALREADY_REPORTED
        - BAD_GATEWAY
        - BAD_REQUEST
        - BANDWIDTH_LIMIT_EXCEEDED
        - CHECKPOINT
        - CONFLICT
        - CONTINUE
        - CREATED
        - DESTINATION_LOCKED
        - EXPECTATION_FAILED
        - FAILED_DEPENDENCY
        - FORBIDDEN
        - FOUND
        - GATEWAY_TIMEOUT
        - GONE
        - HTTP_VERSION_NOT_SUPPORTED
        - IM_USED
        - INSUFFICIENT_SPACE_ON_RESOURCE
        - INSUFFICIENT_STORAGE
        - INTERNAL_SERVER_ERROR
        - I_AM_A_TEAPOT
        - LENGTH_REQUIRED
        - LOCKED
        - LOOP_DETECTED
        - METHOD_FAILURE
        - METHOD_NOT_ALLOWED
        - MOVED_PERMANENTLY
        - MOVED_TEMPORARILY
        - MULTIPLE_CHOICES
        - MULTI_STATUS
        - NETWORK_AUTHENTICATION_REQUIRED
        - NON_AUTHORITATIVE_INFORMATION
        - NOT_ACCEPTABLE
        - NOT_EXTENDED
        - NOT_FOUND
        - NOT_IMPLEMENTED
        - NOT_MODIFIED
        - NO_CONTENT
        - OK
        - PARTIAL_CONTENT
        - PAYLOAD_TOO_LARGE
        - PAYMENT_REQUIRED
        - PERMANENT_REDIRECT
        - PRECONDITION_FAILED
        - PRECONDITION_REQUIRED
        - PROCESSING
        - PROXY_AUTHENTICATION_REQUIRED
        - REQUESTED_RANGE_NOT_SATISFIABLE
        - REQUEST_ENTITY_TOO_LARGE
        - REQUEST_HEADER_FIELDS_TOO_LARGE
        - REQUEST_TIMEOUT
        - REQUEST_URI_TOO_LONG
        - RESET_CONTENT
        - SEE_OTHER
        - SERVICE_UNAVAILABLE
        - SWITCHING_PROTOCOLS
        - TEMPORARY_REDIRECT
        - TOO_EARLY
        - TOO_MANY_REQUESTS
        - UNAUTHORIZED
        - UNAVAILABLE_FOR_LEGAL_REASONS
        - UNPROCESSABLE_ENTITY
        - UNSUPPORTED_MEDIA_TYPE
        - UPGRADE_REQUIRED
        - URI_TOO_LONG
        - USE_PROXY
        - VARIANT_ALSO_NEGOTIATES
      responseCode:
        type: integer
        format: int32
      responseMessages:
        type: array
        items:
          type: string
      resultType:
        type: string
        enum:
        - Failure
        - Success
    title: ResponseHeader
  RulesBasedTransactionCategorizerModel:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: The id of the categorizer
      name:
        type: string
        description: The name of the categorizer
      ruleClause:
        description: The language template logic that capture the semantics of this rule
        $ref: '#/definitions/Clause'
    title: RulesBasedTransactionCategorizerModel
  RulesBasedTransactionCategorizerResponseModel:
    type: object
    properties:
      name:
        type: string
        description: The name of the categorizer
      ruleClause:
        description: The language template logic that capture the semantics of this rule
        $ref: '#/definitions/Clause'
    title: RulesBasedTransactionCategorizerResponseModel
  ScenarioModel:
    type: object
    properties:
      active:
        type: boolean
      activities:
        type: array
        items:
          $ref: '#/definitions/ActivityModel'
      brandingText:
        type: string
      company:
        type: string
      description:
        type: string
      endDate:
        type: string
        format: date
      goal:
        type: number
      id:
        type: integer
        format: int64
      name:
        type: string
      startDate:
        type: string
        format: date
      totalImpact:
        type: number
    title: ScenarioModel
  ScoringForecastModel:
    type: object
    properties:
      highValue:
        type: string
      lowValue:
        type: string
      value:
        type: string
    title: ScoringForecastModel
  ScoringResponseModel:
    type: object
    properties:
      forecasts:
        type: array
        items:
          $ref: '#/definitions/ScoringForecastModel'
      header:
        $ref: '#/definitions/ResponseHeader'
    title: ScoringResponseModel
  SearchModel:
    type: object
    properties:
      name:
        type: string
      operator:
        type: string
        enum:
        - CONTAINS
        - EQ
        - GT
        - GTEQ
        - IN
        - LT
        - LTEQ
        - NOTEQ
        - NOTIN
      type:
        type: string
      value:
        type: array
        items:
          type: string
    title: SearchModel
  SectionFormModel:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/FormInputBase'
      order:
        type: integer
        format: int32
      orientation:
        type: string
      sectionId:
        type: string
      separator:
        type: string
      title:
        type: string
    title: SectionFormModel
  SortModel:
    type: object
    properties:
      name:
        type: string
      order:
        type: integer
        format: int32
    title: SortModel
  StepFormModel:
    type: object
    properties:
      bodyCopy:
        type: array
        items:
          type: string
      icon:
        type: string
      iconName:
        type: string
      infoBox:
        $ref: '#/definitions/InformationBoxModel'
      label:
        type: string
      order:
        type: integer
        format: int32
      sections:
        type: array
        items:
          $ref: '#/definitions/SectionFormModel'
      showNavigation:
        type: boolean
      stepId:
        type: string
      subText:
        type: string
      title:
        type: string
      totalQuestions:
        type: integer
        format: int32
    title: StepFormModel
  StreamOfAccountModel:
    type: object
    title: StreamOfAccountModel
  StreamOfCompanyModel:
    type: object
    title: StreamOfCompanyModel
  StreamOfCounterPartyModel:
    type: object
    title: StreamOfCounterPartyModel
  StreamOfForecastViewModel:
    type: object
    title: StreamOfForecastViewModel
  StreamOfKeyPerformanceIndicatorModel:
    type: object
    title: StreamOfKeyPerformanceIndicatorModel
  StreamOfKpiManagementModel:
    type: object
    title: StreamOfKpiManagementModel
  StreamOfTransactionModel:
    type: object
    title: StreamOfTransactionModel
  TenantConfigListRequestModel:
    type: object
    properties:
      ids:
        type: array
        items:
          type: integer
          format: int64
    title: TenantConfigListRequestModel
  TenantConfigModelReq:
    type: object
    properties:
      dbconnInfo:
        type: string
      enteredBy:
        type: string
      enteredTimestamp:
        $ref: '#/definitions/LocalTimeReq'
      hostId:
        type: string
      hostSecretKey:
        type: string
      hostUrl:
        type: string
      id:
        type: integer
        format: int64
      modifiedBy:
        type: string
      modifiedTimestamp:
        $ref: '#/definitions/LocalTimeReq'
      redirectUrl:
        type: string
      tenantId:
        type: string
    title: TenantConfigModelReq
  TenantConfigModelRes:
    type: object
    properties:
      dbconnInfo:
        type: string
      enteredBy:
        type: string
      enteredTimestamp:
        $ref: '#/definitions/LocalTimeRes'
      hostId:
        type: string
      hostSecretKey:
        type: string
      hostUrl:
        type: string
      id:
        type: integer
        format: int64
      modifiedBy:
        type: string
      modifiedTimestamp:
        $ref: '#/definitions/LocalTimeRes'
      redirectUrl:
        type: string
      tenantId:
        type: string
    title: TenantConfigModelRes
  TenantConfigResponseModel:
    type: object
    properties:
      header:
        $ref: '#/definitions/ResponseHeader'
      tenantConfigs:
        type: array
        items:
          $ref: '#/definitions/TenantConfigModelRes'
    title: TenantConfigResponseModel
  TenantListRequestModel:
    type: object
    properties:
      ids:
        type: array
        items:
          type: integer
          format: int64
    title: TenantListRequestModel
  TenantModel:
    type: object
    properties:
      description:
        type: string
      enteredBy:
        type: string
      enteredTimestamp:
        $ref: '#/definitions/LocalTimeRes'
      id:
        type: integer
        format: int64
      modifiedBy:
        type: string
      modifiedTimestamp:
        $ref: '#/definitions/LocalTimeRes'
      source:
        type: string
      tenantCode:
        type: string
      tenantId:
        type: string
    title: TenantModel
  TenantModelReq:
    type: object
    properties:
      description:
        type: string
      enteredBy:
        type: string
      enteredTimestamp:
        $ref: '#/definitions/LocalTimeReq'
      id:
        type: integer
        format: int64
      modifiedBy:
        type: string
      modifiedTimestamp:
        $ref: '#/definitions/LocalTimeReq'
      source:
        type: string
      tenantCode:
        type: string
      tenantId:
        type: string
    title: TenantModelReq
  TenantModelRes:
    type: object
    properties:
      description:
        type: string
      enteredBy:
        type: string
      enteredTimestamp:
        $ref: '#/definitions/LocalTimeRes'
      id:
        type: integer
        format: int64
      modifiedBy:
        type: string
      modifiedTimestamp:
        $ref: '#/definitions/LocalTimeRes'
      source:
        type: string
      tenantCode:
        type: string
      tenantId:
        type: string
    title: TenantModelRes
  TenantResponseModel:
    type: object
    properties:
      header:
        $ref: '#/definitions/ResponseHeader'
      tenants:
        type: array
        items:
          $ref: '#/definitions/TenantModelRes'
    title: TenantResponseModel
  TodaysPositionModel:
    type: object
    properties:
      todaysCashPosition:
        type: string
      todaysDate:
        type: string
        format: date
      todaysOpeningBalance:
        type: string
      todaysPositionInflow:
        type: string
      todaysPositionOutflow:
        type: string
      todaysTransactionCount:
        type: integer
        format: int64
    title: TodaysPositionModel
  TransactionAdjustmentModelReq:
    title: TransactionAdjustmentModel
    allOf:
    - $ref: '#/definitions/BaseActivityAdjustmentModel'
    - type: object
      properties:
        activity:
          $ref: '#/definitions/ActivityModel'
        id:
          type: integer
          format: int64
        inflow:
          type: boolean
        isNew:
          type: boolean
        name:
          type: string
        transactions:
          type: array
          items:
            $ref: '#/definitions/TransactionModelReq'
      title: TransactionAdjustmentModelReq
  TransactionAdjustmentModelRes:
    type: object
    properties:
      activity:
        $ref: '#/definitions/ActivityModel'
      id:
        type: integer
        format: int64
      inflow:
        type: boolean
      isNew:
        type: boolean
      name:
        type: string
      transactions:
        type: array
        items:
          $ref: '#/definitions/TransactionModelRes'
    title: TransactionAdjustmentModelRes
  TransactionCategoryAdjustmentModel:
    title: TransactionCategoryAdjustmentModel
    allOf:
    - $ref: '#/definitions/BaseActivityAdjustmentModel'
    - type: object
      properties:
        activity:
          $ref: '#/definitions/ActivityModel'
        amount:
          type: number
        asOfDate:
          type: string
          format: date
        category:
          $ref: '#/definitions/CategoryModel'
        id:
          type: integer
          format: int64
        inflow:
          type: boolean
        name:
          type: string
      title: TransactionCategoryAdjustmentModel
  TransactionEnumsResponseModel:
    type: object
    properties:
      accountAssigned:
        type: array
        items:
          $ref: '#/definitions/EnumModel'
      action:
        type: array
        items:
          $ref: '#/definitions/EnumModel'
      recurring:
        type: array
        items:
          $ref: '#/definitions/EnumModel'
      source:
        type: array
        items:
          $ref: '#/definitions/EnumModel'
      status:
        type: array
        items:
          $ref: '#/definitions/EnumModel'
      transactionType:
        type: array
        items:
          $ref: '#/definitions/EnumModel'
    title: TransactionEnumsResponseModel
  TransactionIdModel:
    type: object
    properties:
      externalRefId:
        type: string
      transactionId:
        type: integer
        format: int64
    title: TransactionIdModel
  TransactionListResponseModel:
    type: object
    properties:
      balances:
        type: object
        additionalProperties:
          type: string
      header:
        $ref: '#/definitions/ResponseHeader'
      pagination:
        $ref: '#/definitions/PaginationModel'
      rows:
        type: array
        items:
          type: object
          additionalProperties:
            type: object
            properties: {}
    title: TransactionListResponseModel
  TransactionMatchModelReq:
    type: object
    properties:
      matchAmount:
        type: number
      matchedTransaction:
        $ref: '#/definitions/TransactionModelReq'
    title: TransactionMatchModelReq
  TransactionMatchModelRes:
    type: object
    properties:
      matchAmount:
        type: number
      matchedTransaction:
        $ref: '#/definitions/TransactionModelRes'
    title: TransactionMatchModelRes
  TransactionModel:
    type: object
    properties:
      accountAssigned:
        type: string
      accountId:
        type: integer
        format: int64
      accountName:
        type: string
      accountNum:
        type: string
      bankId:
        type: string
      bankReference:
        type: string
      beneAccountName:
        type: string
      beneAccountNum:
        type: string
      beneBankId:
        type: string
      beneName:
        type: string
      category:
        type: string
      company:
        type: string
      counterPartyId:
        type: integer
        format: int64
      counterPartyName:
        type: string
      customerReference:
        type: string
      enteredBy:
        type: string
      enteredTimestamp:
        type: string
        format: date-time
      externalRefId:
        type: string
      id:
        type: integer
        format: int64
      inflow:
        type: number
      isUserCategorized:
        type: boolean
      matchStatus:
        type: string
        enum:
        - MATCHED
        - NOT_MATCHED
        - PARTIALLY_MATCHED
      modifiedBy:
        type: string
      modifiedTimestamp:
        type: string
        format: date-time
      outflow:
        type: number
      payType:
        type: string
      postedFlag:
        type: string
        enum:
        - I
        - P
        - U
      predicted:
        type: boolean
      recurring:
        type: string
      recurringEndDate:
        type: string
        format: date
      recurringTransactionId:
        type: integer
        format: int64
      residualMatchAmount:
        type: number
      scheduledDate:
        type: string
        format: date
      source:
        type: string
      status:
        type: string
      transSourceType:
        type: string
        enum:
        - B
        - P
      transactionCategoryId:
        type: integer
        format: int64
      transactionCodeId:
        type: integer
        format: int64
      transactionDetail:
        type: string
      transactionId:
        type: integer
        format: int64
      transactionType:
        type: string
    title: TransactionModel
  TransactionModelReq:
    type: object
    properties:
      accountAssigned:
        type: string
      accountId:
        type: integer
        format: int64
      accountName:
        type: string
      accountNum:
        type: string
      bankId:
        type: string
      bankReference:
        type: string
      beneAccountName:
        type: string
      beneAccountNum:
        type: string
      beneBankId:
        type: string
      beneName:
        type: string
      category:
        type: string
      company:
        type: string
      counterPartyId:
        type: integer
        format: int64
      counterPartyName:
        type: string
      customerReference:
        type: string
      enteredBy:
        type: string
      enteredTimestamp:
        type: string
        format: date-time
      externalRefId:
        type: string
      id:
        type: integer
        format: int64
      inflow:
        type: number
      isUserCategorized:
        type: boolean
      matchStatus:
        type: string
        enum:
        - MATCHED
        - NOT_MATCHED
        - PARTIALLY_MATCHED
      modifiedBy:
        type: string
      modifiedTimestamp:
        type: string
        format: date-time
      outflow:
        type: number
      payType:
        type: string
      postedFlag:
        type: string
        enum:
        - I
        - P
        - U
      predicted:
        type: boolean
      recurring:
        type: string
      recurringEndDate:
        type: string
        format: date
      recurringTransactionId:
        type: integer
        format: int64
      residualMatchAmount:
        type: number
      scheduledDate:
        type: string
        format: date
      source:
        type: string
      status:
        type: string
      transSourceType:
        type: string
        enum:
        - B
        - P
      transactionCategoryId:
        type: integer
        format: int64
      transactionCodeId:
        type: integer
        format: int64
      transactionDetail:
        type: string
      transactionId:
        type: integer
        format: int64
      transactionType:
        type: string
    title: TransactionModelReq
  TransactionModelRes:
    type: object
    properties:
      accountAssigned:
        type: string
      accountId:
        type: integer
        format: int64
      accountName:
        type: string
      accountNum:
        type: string
      bankId:
        type: string
      bankReference:
        type: string
      beneAccountName:
        type: string
      beneAccountNum:
        type: string
      beneBankId:
        type: string
      beneName:
        type: string
      category:
        type: string
      company:
        type: string
      counterPartyId:
        type: integer
        format: int64
      counterPartyName:
        type: string
      customerReference:
        type: string
      enteredBy:
        type: string
      enteredTimestamp:
        type: string
        format: date-time
      externalRefId:
        type: string
      id:
        type: integer
        format: int64
      inflow:
        type: number
      inflowTransaction:
        type: boolean
      isUserCategorized:
        type: boolean
      matchStatus:
        type: string
        enum:
        - MATCHED
        - NOT_MATCHED
        - PARTIALLY_MATCHED
      modifiedBy:
        type: string
      modifiedTimestamp:
        type: string
        format: date-time
      outflow:
        type: number
      payType:
        type: string
      postedFlag:
        type: string
        enum:
        - I
        - P
        - U
      predicted:
        type: boolean
      recurring:
        type: string
      recurringEndDate:
        type: string
        format: date
      recurringTransactionId:
        type: integer
        format: int64
      residualMatchAmount:
        type: number
      scheduledDate:
        type: string
        format: date
      source:
        type: string
      status:
        type: string
      transSourceType:
        type: string
        enum:
        - B
        - P
      transactionAmount:
        type: number
      transactionCategoryId:
        type: integer
        format: int64
      transactionCodeId:
        type: integer
        format: int64
      transactionDetail:
        type: string
      transactionId:
        type: integer
        format: int64
      transactionType:
        type: string
    title: TransactionModelRes
  TransactionModelResponse:
    type: object
    properties:
      accountAssigned:
        type: string
      accountId:
        type: integer
        format: int64
      accountName:
        type: string
      accountNum:
        type: string
      bankId:
        type: string
      bankReference:
        type: string
      beneAccountName:
        type: string
      beneAccountNum:
        type: string
      beneBankId:
        type: string
      beneName:
        type: string
      category:
        type: string
      company:
        type: string
      counterPartyId:
        type: integer
        format: int64
      counterPartyName:
        type: string
      customerReference:
        type: string
      enteredBy:
        type: string
      enteredTimestamp:
        type: string
        format: date-time
      externalRefId:
        type: string
      inflow:
        type: number
      inflowTransaction:
        type: boolean
      isUserCategorized:
        type: boolean
      matchStatus:
        type: string
        enum:
        - MATCHED
        - NOT_MATCHED
        - PARTIALLY_MATCHED
      modifiedBy:
        type: string
      modifiedTimestamp:
        type: string
        format: date-time
      outflow:
        type: number
      payType:
        type: string
      postedFlag:
        type: string
        enum:
        - I
        - P
        - U
      predicted:
        type: boolean
      recurring:
        type: string
      recurringEndDate:
        type: string
        format: date
      recurringTransactionId:
        type: integer
        format: int64
      residualMatchAmount:
        type: number
      scheduledDate:
        type: string
        format: date
      source:
        type: string
      status:
        type: string
      transSourceType:
        type: string
        enum:
        - B
        - P
      transactionAmount:
        type: number
      transactionCategoryId:
        type: integer
        format: int64
      transactionCodeId:
        type: integer
        format: int64
      transactionDetail:
        type: string
      transactionId:
        type: integer
        format: int64
      transactionType:
        type: string
    title: TransactionModelResponse
  TransactionReconciliationModel:
    type: object
    properties:
      companyId:
        type: integer
        format: int64
      matchAmount:
        type: number
      matchStatus:
        type: string
        enum:
        - MATCHED
        - NOT_MATCHED
        - PARTIALLY_MATCHED
      matchedTransactions:
        type: array
        items:
          $ref: '#/definitions/TransactionMatchModelRes'
      matchingErrors:
        type: array
        items:
          $ref: '#/definitions/TransactionMatchModelRes'
      residualAmount:
        type: number
      sourceTransactionId:
        type: integer
        format: int64
    title: TransactionReconciliationModel
  TransactionReconciliationRequestModel:
    type: object
    properties:
      matchedTransactions:
        type: array
        items:
          $ref: '#/definitions/TransactionMatchModelReq'
      removeMatchedTransactions:
        type: array
        items:
          $ref: '#/definitions/TransactionMatchModelReq'
      sourceTransaction:
        $ref: '#/definitions/TransactionModelReq'
    title: TransactionReconciliationRequestModel
  TransactionReconciliationResponseModel:
    type: object
    properties:
      header:
        $ref: '#/definitions/ResponseHeader'
      transactionReconciliationModelList:
        type: array
        items:
          $ref: '#/definitions/TransactionReconciliationModel'
    title: TransactionReconciliationResponseModel
  TransactionRequestDeleteListModel:
    type: object
    properties:
      transactionIds:
        type: array
        items:
          $ref: '#/definitions/TransactionIdModel'
    title: TransactionRequestDeleteListModel
  TransactionRequestListModel:
    type: object
    properties:
      transactionIds:
        type: array
        items:
          type: integer
          format: int64
    title: TransactionRequestListModel
  TransactionResponseModel:
    type: object
    properties:
      header:
        $ref: '#/definitions/ResponseHeader'
      transBalances:
        type: object
        additionalProperties:
          type: number
      transactions:
        type: array
        items:
          $ref: '#/definitions/TransactionModelRes'
    title: TransactionResponseModel
  UserModel:
    type: object
    properties:
      company:
        type: string
      locale:
        type: string
      userId:
        type: string
    title: UserModel
  View:
    type: object
    properties:
      contentType:
        type: string
    title: View
  WeekOftheMonthPattern:
    type: object
    properties:
      byday:
        type: string
        enum:
        - FR
        - MO
        - SA
        - SU
        - TH
        - TU
        - WE
      interval:
        type: integer
        format: int32
      week:
        type: integer
        format: int32
    title: WeekOftheMonthPattern
  WeekOftheYearPattern:
    type: object
    properties:
      byday:
        type: string
        enum:
        - FR
        - MO
        - SA
        - SU
        - TH
        - TU
        - WE
      bymonth:
        type: integer
        format: int32
      week:
        type: integer
        format: int32
    title: WeekOftheYearPattern
  WeeklyPattern:
    type: object
    properties:
      byday:
        type: array
        items:
          type: string
          enum:
          - FR
          - MO
          - SA
          - SU
          - TH
          - TU
          - WE
      interval:
        type: integer
        format: int32
    title: WeeklyPattern
  YearlyPattern:
    type: object
    properties:
      dayoftheyear:
        $ref: '#/definitions/DayOftheYearPattern'
      weekoftheyear:
        $ref: '#/definitions/WeekOftheYearPattern'
    title: YearlyPattern
